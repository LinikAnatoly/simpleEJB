<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="dodat3_get_report_str_svern" pageWidth="2267" pageHeight="535" orientation="Landscape" whenNoDataType="AllSectionsNoDetail" columnWidth="2267" leftMargin="0" rightMargin="0" topMargin="0" bottomMargin="0" scriptletClass="com.ksoe.energynet.reports.common.FINScriptlet" isIgnorePagination="true">
	<property name="ireport.scriptlethandling" value="2"/>
	<property name="ireport.encoding" value="UTF-8"/>
	<property name="ireport.zoom" value="1.0"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<import value="net.sf.jasperreports.engine.*"/>
	<import value="java.util.*"/>
	<import value="net.sf.jasperreports.engine.data.*"/>
	<scriptlet name="mDaxScriptlet" class="com.ksoe.energynet.reports.common.mDaxScriptlet"/>
	<scriptlet name="FINScriptlet" class="com.ksoe.energynet.reports.common.FINScriptlet"/>
	<parameter name="Ppodrkod" class="java.lang.String" isForPrompting="false"/>
	<parameter name="Ppodr_name" class="java.lang.String" isForPrompting="false"/>
	<parameter name="pdate1" class="java.lang.String" isForPrompting="false"/>
	<parameter name="pdate2" class="java.lang.String"/>
	<parameter name="sumhoursotpusk" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[$P{sumhoursotpusk} != null ? $P{sumhoursotpusk} : new BigDecimal(0)]]></defaultValueExpression>
	</parameter>
	<parameter name="fio_fin" class="java.lang.String"/>
	<parameter name="post_fin" class="java.lang.String" isForPrompting="false"/>
	<parameter name="tabn_fin" class="java.lang.String" isForPrompting="false"/>
	<parameter name="plankind" class="java.lang.Integer"/>
	<parameter name="p_countworkhours" class="java.math.BigDecimal"/>
	<queryString>
		<![CDATA[select period ,
      fio_worker ,
      name_position_fin ,
      name_position_plan ,
brigada_work_name ,
sum(realizac_invest_progr) as realizac_invest_progr ,
sum(vikonan_work_priconection) as vikonan_work_priconection ,
sum(work_in_energozbut) as work_in_energozbut ,
sum(work_on_pripis) as work_on_pripis ,
sum(col_14) as col_14 ,
sum(col_15) as col_15 ,
sum(col_16) as col_16,
sum(col_17) as col_17 ,
sum(col_18) as col_18 ,
sum(col_19) as col_19 ,
sum(col_20) as col_20 ,
sum(col_21) as col_21,
sum(col_22) as col_22 ,
sum(col_23) as col_23 ,
sum(col_24) as col_24 ,
sum(col_25) as col_25 ,
sum(col_26) as col_26 ,
sum(col_27) as col_27 ,
sum(col_28) as col_28 ,
sum(col_29) as col_29 ,
sum(col_30) as col_30 ,
sum(col_31) as col_31 ,
sum(col_32) as col_32 ,
sum(col_33) as col_33 ,
--sum(col_other) as col_other ,
--sum(col_other_avr) as col_other_avr ,
sum(coalesce(deliverytimefact , 0)) as deliverytimefact ,
sum(delivery_realizac_invest_progr) + sum(delivery_vikonan_work_priconection) + sum(delivery_work_kr) as delivery_fact_zagr_kr_pr_inv_work ,
sum(totalfact_not_avr) as totalfact_not_avr ,
sum(totalfact_avr) as totalfact_avr ,
sum(totalfact_kr_ip_prisoed) as totalfact_kr_ip_prisoed ,

cast(sum(totalfact_not_avr) - sum(realizac_invest_progr) - sum(vikonan_work_priconection) -
sum(work_in_energozbut) - sum(col_14)  - sum(col_16)  - sum(col_18)  -  sum(col_20) -
sum(col_22)   - sum(col_24) - sum(col_26) - sum(col_28) - sum(col_30) - sum(col_32) - sum(work_on_pripis)
as numeric(15,2)  ) as col_other  ,

cast(sum(totalfact_avr) - sum(col_15) - sum(col_17) - sum(col_19) - sum(col_21) - sum(col_23) -
sum(col_25) - sum(col_27) - sum(col_29) - sum(col_31) - sum(col_33)
as numeric(15,2)  ) as col_other_avr ,

cast(sum(totalfact_kr_ip_prisoed) - sum(realizac_invest_progr) - sum(vikonan_work_priconection) -
sum(col_14)  - sum(col_16)  - sum(col_18)  -  sum(col_20) -
sum(col_22)   - sum(col_24) - sum(col_26) - sum(col_28) - sum(col_30) - sum(col_32) as numeric(15,2) ) as col_other_kr_ip_prisoed


      From (


select (select  case when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '01' then 'Січень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '02' then 'Лютий'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '03' then 'Березень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '04' then 'Квітень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '05' then 'Травень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '06' then 'Червень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '07' then 'Липень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '08' then 'Серпень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '09' then 'Вересень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '10' then 'Жовтень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '11' then 'Листопад'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '12' then 'Грудень'
            end  ) as period ,
 $P{fio_fin} as fio_worker ,  $P{post_fin} as name_position_fin  ,
baz_sum.name_position_plan ,
baz_sum.brigada_work_name ,
sum(realizac_invest_progr) as realizac_invest_progr ,
sum(vikonan_work_priconection) as vikonan_work_priconection ,
sum(work_in_energozbut)  as work_in_energozbut ,
sum(work_on_pripis) as work_on_pripis ,
sum(col_14) as col_14 ,
sum(col_15) as col_15 ,
sum(col_16) as col_16 ,
sum(col_17) as col_17 ,
sum(col_18) as col_18 ,
sum(col_19) as col_19 ,
sum(col_20) as col_20 ,
sum(col_21) as col_21 ,
sum(col_22) as col_22 ,
sum(col_23) as col_23 ,
sum(col_24) as col_24 ,
sum(col_25) as col_25 ,
sum(col_26) as col_26 ,
sum(col_27) as col_27 ,
sum(col_28) as col_28 ,
sum(col_29) as col_29 ,
sum(col_30) as col_30 ,
sum(col_31) as col_31 ,
sum(col_32) as col_32 ,
sum(col_33) as col_33 ,
-- sum(col_other) as col_other ,
-- sum(col_other_avr) as col_other_avr ,


sum(deliverytimefact)   as  deliverytimefact ,
sum(delivery_realizac_invest_progr) as delivery_realizac_invest_progr ,
sum(delivery_vikonan_work_priconection) as delivery_vikonan_work_priconection ,
sum(delivery_work_kr) as delivery_work_kr ,

sum(totalfact_not_avr) as totalfact_not_avr ,
sum(totalfact_avr) as totalfact_avr ,
sum(totalfact_kr_ip_prisoed) as totalfact_kr_ip_prisoed



from (
select
baz_sel.fio_worker , baz_sel.positionname , baz_sel.name_position_plan ,
baz_sel.brigada_work_name ,
/*инвест программа */ case when ( baz_sel.enp_typerefcode = 5 or  ( baz_sel.enp_typerefcode  = 10 /*непл. раб. */  and  baz_sel.staterefcode = 4 /*кап буд*/ ) ) then coalesce(baz_sel.countfact,0) else 0 end as realizac_invest_progr ,
/*присоединения */ case when baz_sel.enp_typerefcode = 7 then coalesce(baz_sel.countfact,0) else 0 end as vikonan_work_priconection ,
/*работы в энергосбыте  */ case when baz_sel.enp_typerefcode in (6, 100, 101, 102, 103, 104, 105, 106, 107,111,112) then coalesce(baz_sel.countfact,0) else 0 end as work_in_energozbut ,
/*роботи за приписом */   case when baz_sel.enp_typerefcode = 3 then coalesce(baz_sel.countfact,0) else 0 end as work_on_pripis ,
-------------------- ТП -10/0,4 кВ */ ------------------------------------------
/*колонка 14  */ case when  baz_sel.element_typerefcode in ( 3 , 21 )  /*ТП 0.4 кВ или Трансформатори для ремонту */
                       and baz_sel.staterefcode in( 1 , 8)  /*Кап ремонт или Доробка */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_14 ,
/*колонка 15 */ case when baz_sel.element_typerefcode = 3  /*ТП 0.4 кВ*/
                       and baz_sel.staterefcode = 1 /*Кап ремонт*/
                       and baz_sel.enp_typerefcode = 2 /*аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_15 ,
/*колонка 16 */ case when baz_sel.element_typerefcode = 3  /*ТП 0.4 кВ*/
                       and baz_sel.staterefcode = 3 /*Техническое обслуживание */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_16 ,
/*колонка 17 */ case when baz_sel.element_typerefcode = 3  /*ТП 0.4 кВ*/
                       and baz_sel.staterefcode = 3 /*Техническое обслуживание */
                       and baz_sel.enp_typerefcode = 2 /*аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_17   ,
 ------------ ПЛ - 10,/0,4 кВ --------------------------------------------------
/*колонка 18  */ case when  baz_sel.element_typerefcode in (1, 2) /*Повітряна лінія 0.4 - 10 кВ*/
                       and baz_sel.staterefcode in( 1 , 8)  /*Кап ремонт или Доробка */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_18 ,
/*колонка 19 */ case when baz_sel.element_typerefcode in (1, 2) /*Повітряна лінія 0.4 - 10 кВ*/
                       and baz_sel.staterefcode = 1 /*Кап ремонт*/
                       and baz_sel.enp_typerefcode = 2 /*аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_19 ,
/*колонка 20 */ case when baz_sel.element_typerefcode  in (1, 2) /*Повітряна лінія 0.4 - 10 кВ*/
                       and baz_sel.staterefcode = 3 /*Техническое обслуживание */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_20 ,
/*колонка 21 */ case when baz_sel.element_typerefcode in (1, 2) /*Повітряна лінія 0.4 - 10 кВ*/
                       and baz_sel.staterefcode = 3 /*Техническое обслуживание */
                       and baz_sel.enp_typerefcode = 2 /*аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_21 ,
 ---------------- КЛ -0,4/10/35 кВ ---------------------------------------------
/*колонка 22  */ case when  baz_sel.element_typerefcode = 11 /*КЛ - 0,4/10/35 кВ*/
                       and baz_sel.staterefcode in( 1 , 8)  /*Кап ремонт или Доробка */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_22 ,
/*колонка 23 */ case when baz_sel.element_typerefcode = 11 /*КЛ - 0,4/10/35 кВ*/
                       and baz_sel.staterefcode = 1 /*Кап ремонт*/
                       and baz_sel.enp_typerefcode in ( 2 , 9 )  /* или вкл аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_23 ,
/*колонка 24 */ case when baz_sel.element_typerefcode = 11 /*КЛ - 0,4/10/35 кВ*/
                       and baz_sel.staterefcode = 3 /*Техническое обслуживание */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_24 ,
/*колонка 25 */ case when baz_sel.element_typerefcode = 11 /*КЛ - 0,4/10/35 кВ*/
                       and baz_sel.staterefcode = 3 /*Техническое обслуживание */
                       and baz_sel.enp_typerefcode in ( 2 , 9 ) /* или вкл или аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_25   ,
 -----------------ПС -150/35 кВ ------------------------------------------------
 /*колонка 26  */ case when  baz_sel.element_typerefcode in ( 6 , 9 ) /*Подстанция 35-150 кВ(6)  + объекты РЗА(9)  */
                       and baz_sel.staterefcode in( 1 , 8)  /*Кап ремонт или Доробка */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_26 ,
/*колонка 27 */ case when baz_sel.element_typerefcode in ( 6 , 9 ) /*Подстанция 35-150 кВ(6)  + объекты РЗА(9)  */
                       and baz_sel.staterefcode = 1 /*Кап ремонт*/
                       and baz_sel.enp_typerefcode = 2 /*аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_27 ,
/*колонка 28 */ case when baz_sel.element_typerefcode in ( 6 , 9 ) /*Подстанция 35-150 кВ(6)  + объекты РЗА(9)  */
                       and baz_sel.staterefcode = 5 /*Текущий ремонт  */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_28 ,
/*колонка 29 */ case when baz_sel.element_typerefcode in ( 6 , 9 ) /*Подстанция 35-150 кВ(6)  + объекты РЗА(9)  */
                       and baz_sel.staterefcode = 5 /*Текущий ремонт  */
                       and baz_sel.enp_typerefcode = 2 /*аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_29  ,
 ----------------- ВЛ -35 /150 кВ ----------------------------------------------
 /*колонка 30  */ case when  baz_sel.element_typerefcode = 5 /*Повітряна лінія 35-150 кВ*/
                       and baz_sel.staterefcode in( 1 , 8)  /*Кап ремонт или Доробка */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_30 ,
/*колонка 31 */ case when baz_sel.element_typerefcode = 5 /*Повітряна лінія 35-150 кВ*/
                       and baz_sel.staterefcode = 1 /*Кап ремонт*/
                       and baz_sel.enp_typerefcode = 2 /*аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_31 ,
/*колонка 32 */ case when baz_sel.element_typerefcode = 5 /*Повітряна лінія 35-150 кВ*/
                       and baz_sel.staterefcode = 3 /*Техническое обслуживание */
                       and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_32 ,
/*колонка 33 */ case when baz_sel.element_typerefcode = 5 /*Повітряна лінія 35-150 кВ*/
                       and baz_sel.staterefcode = 3 /*Техническое обслуживание */
                       and baz_sel.enp_typerefcode = 2 /*аварийно востановительные работы */
                       Then coalesce(baz_sel.countfact,0 ) else 0 end as col_33 ,
/*колонка other */
/* case when ( (baz_sel.element_typerefcode not in ( 3 , 1 , 2 , 11 , 6 , 9 , 5 ))
                 or ( ( baz_sel.element_typerefcode = 9 and baz_sel.staterefcode = 3 )
                             or
                            ( baz_sel.element_typerefcode = 6 and baz_sel.staterefcode = 3 )    ) )
                 and baz_sel.enp_typerefcode <> 2
Then coalesce(baz_sel.countfact,0 ) else 0 end as col_other

,
 */
/*колонка other АВР  */
/* case when ( (baz_sel.element_typerefcode not in ( 3 , 1 , 2 , 11 , 6 , 9 , 5 ))
                 or ( ( baz_sel.element_typerefcode = 9 and baz_sel.staterefcode = 3 )
                             or
                            ( baz_sel.element_typerefcode = 6 and baz_sel.staterefcode = 3 )    ) )
                 and baz_sel.enp_typerefcode = 2

Then coalesce(baz_sel.countfact,0 ) else 0 end as col_other_avr
  ,
  */

 baz_sel.deliverytimefact ,
 -- доставка по кр ип инвест программе
 /*доставка инвест программа */ case when ( baz_sel.enp_typerefcode = 5 or  ( baz_sel.enp_typerefcode  = 10 /*непл. раб. */  and  baz_sel.staterefcode = 4 /*кап буд*/ ) ) then coalesce(baz_sel.deliverytimefact,0) else 0 end as delivery_realizac_invest_progr ,
 /*доставка присоединения */ case when baz_sel.enp_typerefcode = 7 then coalesce(baz_sel.deliverytimefact,0) else 0 end as delivery_vikonan_work_priconection ,
 /*доставка работы КР  */ case when ((baz_sel.staterefcode in (1 , 8 ) ) and (baz_sel.enp_typerefcode in (1 , 10) )) /*по КР попадают тока плановые работы*/
                          then coalesce(baz_sel.deliverytimefact,0) else 0 end as delivery_work_kr ,
 -- конец доствкаи по инвест кр инв прогр

 case when baz_sel.enp_typerefcode not in ( 2 , 9 ) Then coalesce(baz_sel.countfact,0 ) else 0 end as totalfact_not_avr ,
 case when baz_sel.enp_typerefcode in(  2 , 9 )  Then coalesce(baz_sel.countfact,0 ) else 0 end as totalfact_avr ,
 case when
 ((baz_sel.enp_typerefcode in (5,7)) or
                              ( ( baz_sel.staterefcode = 1 ) and (baz_sel.enp_typerefcode = 1 ) ))
                              Then coalesce(baz_sel.countfact,0 ) else 0 end  as  totalfact_kr_ip_prisoed
 From (
SELECT  enplanwork.code ,
        enhumenitem.countfact ,
        enplanwork.typerefcode as enp_typerefcode ,
        enplanwork.staterefcode ,
        enelement.typerefcode as element_typerefcode ,
        finworker.name as fio_worker ,
        finworker.positionname ,
        tkposition.name||coalesce(trim(tkposition.rank),'') as name_position_plan ,
        finexecutor.name  as brigada_work_name ,
        sum( endeliverytime.deliverytimefact ) as deliverytimefact ,
        enhumenitem.code as humanitemcode

           from enhumenitem   left join endeliverytime on (endeliverytime.humenitemrefcode = enhumenitem.code  )
           , enplanworkitem , finworker , enplanwork
           , finexecutor , enelement , tkposition
                   Where  enhumenitem.planitemrefcode = enplanworkitem.code
                     and  enplanworkitem.planrefcode = enplanwork.code
                     and  coalesce(enhumenitem.countfact  , 0 ) <> 0
                     and  enhumenitem.finworkercode = finworker.code
                     and  enplanwork.finexecutorcode =  finexecutor.code
                    -- and  finexecutor.fincode = P{Ppodrkod}
                     and  enplanwork.datestart between to_date($P{pdate1}, 'dd.mm.yyyy') and to_date($P{pdate2},'dd.mm.yyyy')
                     and  enplanwork.statuscode NOT IN (2,6)
                     and  enplanwork.kindcode = $P{plankind}
                     and  enplanwork.elementrefcode = enelement.code
                     and  enplanworkitem.countgen <> 0
                     and  finworker.tabnumber::integer = $P!{tabn_fin}
                     and  enhumenitem.positiongencode = tkposition.code
                     -- and  finworker.departmentcode = P{Ppodrkod}
                     -- and  finworker.categor = 1
                    --  and enelement.typerefcode in (1,2,3,4,5,6,9,10,11,17,21) -- 02.07.2010
                     and finworker.kindrefcode = 1 /*Загальнотехнічний персонал*/

group by enplanwork.code ,
        enhumenitem.countfact ,
        enplanwork.typerefcode ,
        enplanwork.staterefcode ,
        enelement.typerefcode ,
        finworker.name ,
        finworker.positionname ,
        tkposition.name||coalesce(trim(tkposition.rank),'') ,
        finexecutor.name   ,
        enhumenitem.code

) baz_sel
) baz_sum
group by baz_sum.fio_worker , baz_sum.positionname , baz_sum.name_position_plan ,
baz_sum.brigada_work_name -- , baz_sum.deliverytimefact



UNION
select
(select  case when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '01' then 'Січень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '02' then 'Лютий'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '03' then 'Березень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '04' then 'Квітень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '05' then 'Травень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '06' then 'Червень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '07' then 'Липень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '08' then 'Серпень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '09' then 'Вересень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '10' then 'Жовтень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '11' then 'Листопад'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '12' then 'Грудень'
            end  ) as period  ,
 $P{fio_fin} as fio_worker , $P{post_fin} as name_position_fin  ,
'' as name_position_plan ,
'' as brigada_work_name ,
0 as realizac_invest_progr ,
0 as vikonan_work_priconection ,
0 as work_in_energozbut ,
0 as work_on_pripis ,
0 as col_14 ,
0 as col_15 ,
0 as col_16 ,
0 as col_17 ,
0 as col_18 ,
0 as col_19 ,
0 as col_20 ,
0 as col_21 ,
0 as col_22 ,
0 as col_23 ,
0 as col_24 ,
0 as col_25 ,
0 as col_26 ,
0 as col_27 ,
0 as col_28 ,
0 as col_29 ,
0 as col_30 ,
0 as col_31 ,
0 as col_32 ,
0 as col_33 ,
-- 0 as col_other ,
-- 0 as col_other_avr ,

0 as deliverytimefact ,
0 as delivery_realizac_invest_progr ,
0 as delivery_vikonan_work_priconection ,
0 as delivery_work_kr ,
0 as totalfact_not_avr ,
0 as totalfact_avr ,
0 as totalfact_kr_ip_prisoed
  where not exists ( select * from
             enhumenitem , finworker , enplanwork
                   Where  enhumenitem.planrefcode = enplanwork.code
                     and  coalesce(enhumenitem.countfact  , 0 ) <> 0
                     and  enhumenitem.finworkercode = finworker.code
                     and  enplanwork.datestart between to_date($P{pdate1} , 'dd.mm.yyyy') and to_date($P{pdate2},'dd.mm.yyyy')
                     and  enplanwork.statuscode NOT IN (2,6)
                     and  enplanwork.kindcode = $P{plankind}
                     and  finworker.tabnumber::integer = $P!{tabn_fin}
               )


) sel_zag

group by period , fio_worker , name_position_fin , brigada_work_name , name_position_plan


order by fio_worker , name_position_fin , brigada_work_name , name_position_plan]]>
	</queryString>
	<field name="period" class="java.lang.String"/>
	<field name="realizac_invest_progr" class="java.math.BigDecimal"/>
	<field name="vikonan_work_priconection" class="java.math.BigDecimal"/>
	<field name="work_in_energozbut" class="java.math.BigDecimal"/>
	<field name="col_14" class="java.math.BigDecimal"/>
	<field name="col_15" class="java.math.BigDecimal"/>
	<field name="col_16" class="java.math.BigDecimal"/>
	<field name="col_17" class="java.math.BigDecimal"/>
	<field name="col_18" class="java.math.BigDecimal"/>
	<field name="col_19" class="java.math.BigDecimal"/>
	<field name="col_20" class="java.math.BigDecimal"/>
	<field name="col_21" class="java.math.BigDecimal"/>
	<field name="col_22" class="java.math.BigDecimal"/>
	<field name="col_23" class="java.math.BigDecimal"/>
	<field name="col_24" class="java.math.BigDecimal"/>
	<field name="col_25" class="java.math.BigDecimal"/>
	<field name="col_26" class="java.math.BigDecimal"/>
	<field name="col_27" class="java.math.BigDecimal"/>
	<field name="col_28" class="java.math.BigDecimal"/>
	<field name="col_29" class="java.math.BigDecimal"/>
	<field name="col_30" class="java.math.BigDecimal"/>
	<field name="col_31" class="java.math.BigDecimal"/>
	<field name="col_32" class="java.math.BigDecimal"/>
	<field name="col_33" class="java.math.BigDecimal"/>
	<field name="fio_worker" class="java.lang.String"/>
	<field name="name_position_fin" class="java.lang.String"/>
	<field name="name_position_plan" class="java.lang.String"/>
	<field name="brigada_work_name" class="java.lang.String"/>
	<field name="deliverytimefact" class="java.math.BigDecimal"/>
	<field name="col_other_avr" class="java.math.BigDecimal"/>
	<field name="col_other" class="java.math.BigDecimal"/>
	<field name="work_on_pripis" class="java.math.BigDecimal"/>
	<field name="col_other_kr_ip_prisoed" class="java.math.BigDecimal"/>
	<field name="delivery_fact_zagr_kr_pr_inv_work" class="java.math.BigDecimal"/>
	<variable name="v_count_personal" class="java.math.BigDecimal">
		<variableExpression><![CDATA[new BigDecimal(1)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(1)]]></initialValueExpression>
	</variable>
	<variable name="v_countworkhours" class="java.math.BigDecimal">
		<variableExpression><![CDATA[$P{p_countworkhours}
/*((com.ksoe.energynet.reports.common.mDaxScriptlet)$P{mDaxScriptlet_SCRIPTLET}).getCountWorkHoursByWorker($P{pdate1}, $P{pdate2} , $P{tabn_fin} )*/]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="v_counthoursotpusk" class="java.math.BigDecimal">
		<variableExpression><![CDATA[$P{sumhoursotpusk}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="var_col11" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{v_count_personal}.doubleValue() != 0.0 )  ? ($F{col_15}.add($F{col_17}).add($F{col_19}).add($F{col_21}).add
         ($F{col_23}).add($F{col_25}).add($F{col_27}).add($F{col_29}).add
         ($F{col_31}).add($F{col_33}).add($F{col_other_avr}) ) : new BigDecimal(0)]]></variableExpression>
	</variable>
	<variable name="var_col12" class="java.math.BigDecimal">
		<variableExpression><![CDATA[$F{deliverytimefact}]]></variableExpression>
	</variable>
	<variable name="var_col10" class="java.math.BigDecimal">
		<variableExpression><![CDATA[$V{v_count_personal}.doubleValue() != 0.0 ?
(( ($V{v_countworkhours}.multiply($V{v_count_personal})).setScale(2, java.math.BigDecimal.ROUND_HALF_UP).subtract($P{sumhoursotpusk}))
.multiply(new BigDecimal(0.05))).setScale(2, java.math.BigDecimal.ROUND_HALF_UP) : new BigDecimal(0)]]></variableExpression>
	</variable>
	<variable name="var_col34" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{v_count_personal}.doubleValue() != 0.0 )  ? ( $F{realizac_invest_progr}.add(
           $F{vikonan_work_priconection}).add(
           $F{work_in_energozbut}).add(
           $V{var_col11}).add(
           $F{col_14}).add(
           $F{col_16}).add(
           $F{col_18}).add(
           $F{col_20}).add(
           $F{col_22}).add(
           $F{col_24}).add(
           $F{col_26}).add(
           $F{col_28}).add(
           $F{col_30}).add(
           $F{col_32}).add(
           $F{col_other}.add(
           $F{work_on_pripis}))
 ) : new BigDecimal(0)]]></variableExpression>
	</variable>
	<variable name="var_col6" class="java.math.BigDecimal">
		<variableExpression><![CDATA[( $V{v_count_personal}.doubleValue() != 0.0 )  ? ( ($V{v_countworkhours}.multiply($V{v_count_personal})).setScale(2, java.math.BigDecimal.ROUND_HALF_UP).subtract($P{sumhoursotpusk}) ) : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_5" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$P{sumhoursotpusk}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_6" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[( $V{v_count_personal}.doubleValue() != 0.0 )  ? ( ($V{v_countworkhours}.multiply($V{v_count_personal})).setScale(2, java.math.BigDecimal.ROUND_HALF_UP).subtract($P{sumhoursotpusk}) ) : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_7" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{realizac_invest_progr}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_8" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{vikonan_work_priconection}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_9" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{work_in_energozbut}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_10" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$V{var_col10}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_11" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$V{var_col11}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_12" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$V{var_col12}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_14" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_14}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_15" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_15}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_16" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_16}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_17" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_17}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_18" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_18}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_19" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_19}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_20" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_20}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_21" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_21}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_22" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_22}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_23" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_23}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_24" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_24}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_25" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_25}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_26" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_26}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_27" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_27}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_28" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_28}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_29" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_29}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_30" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_30}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_31" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_31}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_32" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_32}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_33" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_33}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_34" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$V{var_col34}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_35" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[(
  ($V{v_count_personal}.doubleValue() != 0.0 ) &&
  ($V{var_col34}.doubleValue() != 0.0 ) &&
  ($V{var_col6}.doubleValue() != 0.0 )
 )  ?
( ($V{var_col34}.divide($V{var_col6}, 8 , 2).multiply( new BigDecimal(100))) )
 : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_36" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[( ($V{v_count_personal}.doubleValue() != 0.0 ) && ($V{var_col6}.doubleValue() != 0.0) )
  ? (  (( $F{realizac_invest_progr}.add(
           $F{vikonan_work_priconection}).add(
           $F{col_14}).add(
           $F{col_18}).add(
           $F{col_22}).add(
           $F{col_26}).add(
           $F{col_30})).divide($V{var_col6}, 8 , 2) ).multiply(new BigDecimal(100).setScale(2, java.math.BigDecimal.ROUND_HALF_UP))
       ) : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_37" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[( ($V{v_count_personal}.doubleValue() !=0.0 ) &&
  ($V{var_col6}.doubleValue() != 0.0 ) )
 ? ( $V{var_col11}.divide($V{var_col6}, 8 , 2).multiply(new BigDecimal(100)).setScale(2, java.math.BigDecimal.ROUND_HALF_UP) ) : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="itogo_fio_otpusk" class="java.math.BigDecimal" calculation="First">
		<variableExpression><![CDATA[$P{sumhoursotpusk}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="itogo_fio_otrabot_vremya" class="java.math.BigDecimal" calculation="First">
		<variableExpression><![CDATA[$V{var_col6}]]></variableExpression>
	</variable>
	<variable name="itogo_fio_realizac_invest_progr" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{realizac_invest_progr}]]></variableExpression>
	</variable>
	<variable name="itogo_fio_vikonan_work_priconection" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{vikonan_work_priconection}]]></variableExpression>
	</variable>
	<variable name="itogo_fio_work_in_energozbut" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{work_in_energozbut}]]></variableExpression>
	</variable>
	<variable name="itogo_fio_col10" class="java.math.BigDecimal" calculation="First">
		<variableExpression><![CDATA[$V{var_col10}]]></variableExpression>
	</variable>
	<variable name="itogo_fio_col11" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$V{var_col11}]]></variableExpression>
	</variable>
	<variable name="itogo_fio_deliverytimefact" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{deliverytimefact}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="itogo_fio_col_13" class="java.math.BigDecimal" calculation="First">
		<variableExpression><![CDATA[( $V{v_count_personal}.doubleValue() != 0.0 )  ?
( $V{itogo_fio_otrabot_vremya}.subtract($V{itogo_fio_realizac_invest_progr}).subtract($V{itogo_fio_vikonan_work_priconection}).subtract($V{itogo_fio_work_in_energozbut}).subtract($V{itogo_fio_col10}).subtract($V{itogo_fio_col11}).subtract($V{itogo_fio_deliverytimefact}) ) : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_other_avr" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{col_other_avr}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_other" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{col_other}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_13" class="java.math.BigDecimal" calculation="First">
		<variableExpression><![CDATA[/*( $V{v_count_personal}.doubleValue() != 0.0 )  ? ( $V{var_col6}.subtract($F{realizac_invest_progr}).subtract($F{vikonan_work_priconection}).subtract($F{work_in_energozbut}).subtract($V{var_col10}).subtract($V{var_col11}).subtract($V{var_col12}) ) : new BigDecimal(0)*/
$V{itogo_fio_col_13}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="itogo13" class="java.math.BigDecimal" resetType="Group" resetGroup="rr">
		<variableExpression><![CDATA[( $V{v_count_personal}.doubleValue() != 0.0 )  ?
( $V{itogo_fio_otrabot_vremya}.subtract($V{itogo_fio_realizac_invest_progr}).subtract($V{itogo_fio_vikonan_work_priconection}).subtract($V{itogo_fio_work_in_energozbut}).subtract($V{itogo_fio_col10}).subtract($V{itogo_fio_col11}).subtract($V{itogo_fio_deliverytimefact}) ) : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="itogo_fio_pripis" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{work_on_pripis}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_col_other_kr_ip_prisoed" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{col_other_kr_ip_prisoed}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_otrab_time" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[( $V{v_count_personal}.doubleValue() != 0.0 )
? ( ($V{v_countworkhours}.multiply($V{v_count_personal})).setScale(2, java.math.BigDecimal.ROUND_HALF_UP).subtract($P{sumhoursotpusk}) )
: new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_realizac_inv" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{itogo_fio_realizac_invest_progr}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_priconection" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{itogo_fio_vikonan_work_priconection}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_energozbut" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{itogo_fio_work_in_energozbut}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col10" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{itogo_fio_col10}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col11" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{itogo_fio_col11}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_pripis" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{itogo_fio_pripis}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_delivery" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{itogo_fio_deliverytimefact}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_ostattime" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{itogo13}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col14" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_14}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col15" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_15}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col16" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_16}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col17" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_17}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col18" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_18}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col19" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_19}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col20" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_20}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col21" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_21}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col22" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_22}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col23" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_23}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col24" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_24}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col25" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_25}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col26" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_26}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col27" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_27}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col28" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_28}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col29" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_29}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col30" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_30}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col31" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_31}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col32" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_32}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col33" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_33}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col_other" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_other}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_col_other_avr" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{sum_col_other_avr}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_vsogo_vik_work" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[( $V{v_count_personal}.doubleValue() != 0.0 )  ? ( $V{itogo_fio_realizac_invest_progr}.add(
           $V{itogo_fio_vikonan_work_priconection}).add(
           $V{itogo_fio_work_in_energozbut}).add(
           $V{itogo_fio_col11}).add(
           $V{sum_col_14}).add(
           $V{sum_col_16}).add(
           $V{sum_col_18}).add(
           $V{sum_col_20}).add(
           $V{sum_col_22}).add(
           $V{sum_col_24}).add(
           $V{sum_col_26}).add(
           $V{sum_col_28}).add(
           $V{sum_col_30}).add(
           $V{sum_col_32}).add(
           $V{sum_col_other}.add(
           $V{itogo_fio_pripis}))
 ) : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_vsogo_proc_zav" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[(
  ($V{v_count_personal}.doubleValue() != 0.0 ) &&
  ($V{itogo_fio_var_col_34}.doubleValue() != 0.0 ) &&
  ($V{itogo_fio_otrabot_vremya}.doubleValue() != 0.0 )
 )  ? ( (($V{itogo_fio_var_col_34}.divide($V{itogo_fio_otrabot_vremya}, 8 , 2)).multiply( new BigDecimal(100))) ) : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="itogo_fio_delivery_kr_inv_prisoed" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{delivery_fact_zagr_kr_pr_inv_work}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_delivery_kr_pr_inv_work" class="java.math.BigDecimal" incrementType="Group" incrementGroup="zatr_hours" calculation="Sum">
		<variableExpression><![CDATA[$F{delivery_fact_zagr_kr_pr_inv_work}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_otpusk" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{v_counthoursotpusk}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="period" class="java.lang.String" resetType="None" calculation="First">
		<variableExpression><![CDATA[$F{period}]]></variableExpression>
	</variable>
	<variable name="itogo_fio_var_col_34" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[( $V{v_count_personal}.doubleValue() != 0.0 )  ? ( $V{itogo_fio_realizac_invest_progr}.add(
           $V{itogo_fio_vikonan_work_priconection}).add(
           $V{itogo_fio_work_in_energozbut}).add(
           $V{itogo_fio_col11}).add(
           $V{sum_col_14}).add(
           $V{sum_col_16}).add(
           $V{sum_col_18}).add(
           $V{sum_col_20}).add(
           $V{sum_col_22}).add(
           $V{sum_col_24}).add(
           $V{sum_col_26}).add(
           $V{sum_col_28}).add(
           $V{sum_col_30}).add(
           $V{sum_col_32}).add(
           $V{sum_col_other}.add(
           $V{itogo_fio_pripis}))
 ) : new BigDecimal(0)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sum_gr_podr_countworkhours" class="java.math.BigDecimal" incrementType="Group" incrementGroup="rr" calculation="Sum">
		<variableExpression><![CDATA[$V{v_countworkhours}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<group name="rr">
		<groupExpression><![CDATA[$P{fio_fin}]]></groupExpression>
		<groupHeader>
			<band splitType="Stretch"/>
		</groupHeader>
		<groupFooter>
			<band splitType="Stretch"/>
		</groupFooter>
	</group>
	<group name="zatr_hours">
		<groupExpression><![CDATA[$P{fio_fin}+ $P{post_fin}+$F{name_position_plan}+$F{brigada_work_name}]]></groupExpression>
		<groupHeader>
			<band splitType="Stretch"/>
		</groupHeader>
		<groupFooter>
			<band splitType="Stretch"/>
		</groupFooter>
	</group>
	<group name="gr_podr">
		<groupExpression><![CDATA[$P{Ppodrkod}]]></groupExpression>
		<groupHeader>
			<band splitType="Stretch"/>
		</groupHeader>
		<groupFooter>
			<band splitType="Stretch"/>
		</groupFooter>
	</group>
	<background>
		<band splitType="Stretch"/>
	</background>
	<title>
		<band splitType="Stretch"/>
	</title>
	<pageHeader>
		<band splitType="Stretch"/>
	</pageHeader>
	<columnHeader>
		<band splitType="Stretch"/>
	</columnHeader>
	<detail>
		<band splitType="Stretch"/>
	</detail>
	<columnFooter>
		<band splitType="Stretch"/>
	</columnFooter>
	<pageFooter>
		<band splitType="Stretch"/>
	</pageFooter>
	<summary>
		<band splitType="Stretch"/>
	</summary>
</jasperReport>
