<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="SummaryListGSMRestFinNetRash" pageWidth="300" pageHeight="20" orientation="Landscape" whenNoDataType="AllSectionsNoDetail" columnWidth="300" leftMargin="0" rightMargin="0" topMargin="0" bottomMargin="0" isIgnorePagination="true">
	<property name="ireport.scriptlethandling" value="0"/>
	<property name="ireport.encoding" value="UTF-8"/>
	<property name="ireport.zoom" value="1.0"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<import value="net.sf.jasperreports.engine.*"/>
	<import value="java.util.*"/>
	<import value="net.sf.jasperreports.engine.data.*"/>
	<parameter name="molcode" class="java.lang.String">
		<defaultValueExpression><![CDATA[new String("1008")]]></defaultValueExpression>
	</parameter>
	<parameter name="typefuel" class="java.lang.Integer">
		<parameterDescription><![CDATA[1- бензин
2- Дизель]]></parameterDescription>
		<defaultValueExpression><![CDATA[new Integer(1)]]></defaultValueExpression>
	</parameter>
	<parameter name="codefueltype" class="java.lang.Integer">
		<parameterDescription><![CDATA[конкретный код типа топлива net]]></parameterDescription>
		<defaultValueExpression><![CDATA[new Integer(0)]]></defaultValueExpression>
	</parameter>
	<parameter name="DateStart" class="java.lang.String">
		<defaultValueExpression><![CDATA[new String("01.03.2011")]]></defaultValueExpression>
	</parameter>
	<parameter name="DateEnd" class="java.lang.String">
		<defaultValueExpression><![CDATA[new String("31.03.2011")]]></defaultValueExpression>
	</parameter>
	<parameter name="sumgenin" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[new BigDecimal(0)]]></defaultValueExpression>
	</parameter>
	<parameter name="sumgenstart" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[new BigDecimal(0)]]></defaultValueExpression>
	</parameter>
	<parameter name="countin" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[new BigDecimal(0)]]></defaultValueExpression>
	</parameter>
	<parameter name="countgenstart" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[new BigDecimal(0)]]></defaultValueExpression>
	</parameter>
	<parameter name="actstatus" class="java.lang.Integer"/>
	<parameter name="transportrealcode" class="java.lang.Integer"/>
	<queryString>
		<![CDATA[select nn_general, matname_general,
sum(quantity) as sumquantityrash,
	sum(cost) as sumcostrash,
sum(quantity * is_other) as quantity_other,
	sum(cost * is_other) as cost_other ,
	sum(cost * is_other) / sum(quantity * is_other) as price_other,
sum(quantity * is_energosbyt) as quantity_energosbyt,
	sum(cost * is_energosbyt) as cost_energosbyt,
    sum(cost * is_energosbyt) / sum(quantity * is_energosbyt) as price_energosbyt,
sum(quantity * is_kapstr) as quantity_kapstr,
	sum(cost * is_kapstr) as cost_kapstr,
    sum(cost * is_kapstr) / sum(quantity * is_kapstr) as price_kapstr,
sum(quantity * is_rm) as quantity_rm ,
	sum(cost * is_rm) as cost_rm ,
    sum(cost * is_rm) / sum(quantity * is_rm) as price_rm,
sum(quantity * is_ktrem) as quantity_ktrem ,
	sum(cost * is_ktrem) as cost_ktrem ,
    sum(cost * is_ktrem) / sum(quantity * is_ktrem) as price_ktrem,
sum(quantity * is_tho) as quantity_tho,
	sum(cost * is_tho) as cost_tho ,
    sum(cost * is_tho) / sum(quantity * is_tho) as price_tho,
sum(quantity * is_usl) as quantity_usl ,
	sum(cost * is_usl) as cost_usl ,
    sum(cost * is_usl) / sum(quantity * is_usl) as price_usl,
sum(quantity * is_dem) as quantity_dem ,
	sum(cost * is_dem) as cost_dem ,
    sum(cost * is_dem) / sum(quantity * is_dem) as price_dem

from

(select nn_general, matname_general, quantity, cost,
case when acttyperefcode not in (4,2,1,5,3,7,9,19) /*расход типу акта для прочих типов актов  */
  	and budgetrefcode not in (500000000,75000011,240000001)
	then 1 else null end as is_other,
case when acttyperefcode not in (7,9) /*не услуги на сторону  */
	and budgetrefcode = 240000001
	then 1 else null end as is_energosbyt,
case when acttyperefcode = 4 /*расход типу акта по кап строительству */
    and budgetrefcode not in (500000000,75000011,240000001)
	then 1 else null end as is_kapstr,
case when acttyperefcode = 2 /*расход типу акта реконструкция и модернизация */
	and budgetrefcode not in (500000000,75000011,240000001)
	then 1 else null end as is_rm,
case when acttyperefcode in (1,5) /*расход типу акта капитальный и текущий ремонты */
	and budgetrefcode not in (500000000,75000011,240000001)
	then 1 else null end as is_ktrem,
case when acttyperefcode = 3 /*расход типу акта : техническое обслуживание */
	and budgetrefcode not in (500000000,75000011,240000001)
	then 1 else null end as is_tho,
case when (acttyperefcode in (7,9))  /*расход типу акта : работы на сторону и ТУ */
	or  (budgetrefcode in (500000000,75000011)) /*или не равно энергосбыту или ВПТУ и ВРТУ */
	then 1 else null end as is_usl,
case when acttyperefcode = 19 /*расход типу акта : по демонтажу */
	and budgetrefcode not in (500000000,75000011,240000001)
	then 1 else null end as is_dem

from

(Select finm.nn as nn_general, finm.mat_name as matname_general,
act.acttyperefcode as acttyperefcode, pw.budgetrefcode as budgetrefcode,
sum(finm.quantity) as quantity, sum(finm.cost) as cost
From entravelsheet trsh
    inner join entravelsheetitem trshi on trsh.code = trshi.travelsheetrefcode
    inner join entravlshttm2trnsprttm trshi2entri on trshi.code = trshi2entri.travelsheetitemrefcode
    inner join entransport2enestimate entri2eni on trshi2entri.transportitemrefcode = entri2eni.transportrefcode
    inner join enestimateitem eni on eni.code = entri2eni.estimaterefcode
    inner join finmaterials finm on finm.estimateitemrefcode = entri2eni.estimaterefcode
    inner join enact2enplanwork act2plan on trshi.planrefcode = act2plan.plancode
    inner join enact act on act.code = act2plan.actrefcode
    inner join enplanwork pw on trshi.planrefcode = pw.code
    inner join (tktransportreal trr inner join
    /*Подзапрос, который возвращает список кодов транспорта которым владел МОЛ с кодом molcode
    в период между DateStart, DateEnd*/
    			(select
					/*Код автотранспорта*/
     				tktransportrealhistory.transportrealrefcode,
     				/*Начало срока владения этого автотранспорта этим МОЛом в этом месяце*/
    				min(case
    					when DateStart >= to_date($P{DateStart}, 'dd.mm.yyyy')
        					and (select trh1.finmolcode from tktransportrealhistory as trh1 where trh1.code =  tktransportrealhistory.parentrefcode) != tktransportrealhistory.finmolcode
        				then DateStart
     					else to_date($P{DateStart}, 'dd.mm.yyyy')
    					end) as DateStart,
    				/*Конец срока владения этого автотранспорта этим МОЛом в этом месяце*/
    				max(case
    					when coalesce(datefinal, last_day(to_date($P{DateEnd}, 'dd.mm.yyyy'))) <= last_day(to_date($P{DateEnd}, 'dd.mm.yyyy'))
    					then coalesce(datefinal, last_day(to_date($P{DateEnd}, 'dd.mm.yyyy')))
        				else last_day(to_date($P{DateEnd}, 'dd.mm.yyyy'))
    					end) as DateEnd
     			from
     				tktransportrealhistory
     			where
     				tktransportrealhistory.finmolcode = $P{molcode}
     			and (
     					(tktransportrealhistory.DateStart >= to_date($P{DateStart}, 'dd.mm.yyyy')
     					and coalesce(tktransportrealhistory.datefinal,tktransportrealhistory.DateStart) <= last_day(to_date($P{DateEnd}, 'dd.mm.yyyy'))
     					)
     					or (to_date($P{DateStart}, 'dd.mm.yyyy') >= tktransportrealhistory.DateStart
        				and to_date($P{DateStart}, 'dd.mm.yyyy') <= coalesce(tktransportrealhistory.datefinal, last_day(to_date($P{DateEnd}, 'dd.mm.yyyy')))
                        or (tktransportrealhistory.datestart between to_date($P{DateStart}, 'dd.mm.yyyy') and to_date($P{DateEnd}, 'dd.mm.yyyy'))
                        or (coalesce(tktransportrealhistory.datefinal, tktransportrealhistory.datestart) between to_date($P{DateStart}, 'dd.mm.yyyy') and to_date($P{DateEnd}, 'dd.mm.yyyy'))
            			)
        			)
     			group by tktransportrealhistory.transportrealrefcode) as transport_history
    on transport_history.transportrealrefcode = trr.code) on trsh.transportrealcode = trr.code
Where
    trshi.kindrefcode = 2
	 and finm.statusrefcode = 1
	 and finm.div_code = '$P!{molcode}'
     and ((act.statusrefcode = 3 /*проведеные*/ and 1 = $P!{actstatus} ) or
	       (act.statusrefcode in (1,3,4) /*проведеные и черновые и на подписании*/ and 2 = $P!{actstatus} ))
and eni.materialrefcode in ( select array2items(string_to_array((select string_agg(materialrefcode::text,',') from tkfueltype where code = $P{codefueltype} ),','))::double precision)
	 and pw.datestart between to_date( '$P!{DateStart}', 'dd.mm.yyyy') and  to_date( '$P!{DateEnd}', 'dd.mm.yyyy')
Group by finm.nn  , finm.mat_name,  act.acttyperefcode, pw.budgetrefcode
) T
) TT
group by nn_general, matname_general
order by nn_general]]>
	</queryString>
	<field name="matname_general" class="java.lang.String"/>
	<field name="nn_general" class="java.lang.String"/>
	<field name="sumcostrash" class="java.math.BigDecimal"/>
	<field name="sumquantityrash" class="java.math.BigDecimal"/>
	<field name="price_dem" class="java.math.BigDecimal"/>
	<field name="cost_dem" class="java.math.BigDecimal"/>
	<field name="quantity_dem" class="java.math.BigDecimal"/>
	<field name="price_usl" class="java.math.BigDecimal"/>
	<field name="cost_usl" class="java.math.BigDecimal"/>
	<field name="quantity_usl" class="java.math.BigDecimal"/>
	<field name="price_tho" class="java.math.BigDecimal"/>
	<field name="cost_tho" class="java.math.BigDecimal"/>
	<field name="quantity_tho" class="java.math.BigDecimal"/>
	<field name="price_ktrem" class="java.math.BigDecimal"/>
	<field name="cost_ktrem" class="java.math.BigDecimal"/>
	<field name="quantity_ktrem" class="java.math.BigDecimal"/>
	<field name="price_rm" class="java.math.BigDecimal"/>
	<field name="cost_rm" class="java.math.BigDecimal"/>
	<field name="quantity_rm" class="java.math.BigDecimal"/>
	<field name="price_kapstr" class="java.math.BigDecimal"/>
	<field name="cost_kapstr" class="java.math.BigDecimal"/>
	<field name="quantity_kapstr" class="java.math.BigDecimal"/>
	<field name="price_other" class="java.math.BigDecimal"/>
	<field name="cost_other" class="java.math.BigDecimal"/>
	<field name="quantity_other" class="java.math.BigDecimal"/>
	<field name="quantity_energosbyt" class="java.math.BigDecimal"/>
	<field name="price_energosbyt" class="java.math.BigDecimal"/>
	<field name="cost_energosbyt" class="java.math.BigDecimal"/>
	<variable name="sumcostrashod" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{sumcostrash}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sumquantityrashod" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{sumquantityrash}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<background>
		<band splitType="Stretch"/>
	</background>
	<title>
		<band splitType="Stretch"/>
	</title>
	<pageHeader>
		<band splitType="Stretch"/>
	</pageHeader>
	<columnHeader>
		<band splitType="Stretch"/>
	</columnHeader>
	<detail>
		<band height="15" splitType="Stretch">
			<textField isStretchWithOverflow="true" isBlankWhenNull="false">
				<reportElement key="textField-1" x="0" y="0" width="50" height="15"/>
				<box>
					<topPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textFieldExpression><![CDATA[$V{sumquantityrashod}]]></textFieldExpression>
			</textField>
		</band>
	</detail>
	<columnFooter>
		<band splitType="Stretch"/>
	</columnFooter>
	<pageFooter>
		<band splitType="Stretch"/>
	</pageFooter>
	<summary>
		<band splitType="Stretch"/>
	</summary>
</jasperReport>
