<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="SummaryListGSMRestFinNetPrih" pageWidth="100" pageHeight="555" columnWidth="100" leftMargin="0" rightMargin="0" topMargin="0" bottomMargin="0">
	<property name="ireport.scriptlethandling" value="0"/>
	<property name="ireport.encoding" value="UTF-8"/>
	<property name="ireport.zoom" value="1.0"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<import value="net.sf.jasperreports.engine.*"/>
	<import value="java.util.*"/>
	<import value="net.sf.jasperreports.engine.data.*"/>
	<parameter name="molcode" class="java.lang.String"/>
	<parameter name="typefuel" class="java.lang.Integer"/>
	<parameter name="dateend" class="java.lang.String"/>
	<parameter name="actstatus" class="java.lang.Integer"/>
	<parameter name="DateStart" class="java.lang.String">
		<defaultValueExpression><![CDATA[new String("01.03.2011")]]></defaultValueExpression>
	</parameter>
	<parameter name="DateEnd" class="java.lang.String">
		<defaultValueExpression><![CDATA[new String("31.03.2011")]]></defaultValueExpression>
	</parameter>
	<parameter name="typeFuelNet" class="java.lang.Integer" isForPrompting="false"/>
	<queryString>
		<![CDATA[SELECT
	'ИТОГ: ' as itogtxt,
    $P{actstatus} as actstatus,
    codefueltypenet, namefueltypenet,
    sum(countgenstart) as countgenstart,
    sum(countgenfinal_from_trvchet) as countgenfinal_from_trvchet,
    sum(sumgenstart) as sumgenstart,
    sum(countin) as countin,
    sum(sumgenin) as sumgenin
FROM
(
select	ftype as codefueltypenet,
		fueltypename as namefueltypenet,
		/*если в этом месяце машина не выезжала, берем остатки предыдущего месяца*/
		coalesce(first_count_start, prev_count_final, 0) as countgenstart,
		coalesce(last_count_final, prev_count_final, 0) as countgenfinal_from_trvchet,
		coalesce(first_sum_start, prev_sum_final, 0) as sumgenstart,
		coalesce(count_in, 0) as countin,
		coalesce(sum_in, 0) as sumgenin
from

(select ftype, fueltypename,

-- первый остаток в этом месяце
(select fr.countgenstart
	from entravelsheet ts inner join entravelsheetfuelremns fr
	on fr.travelsheetrefcode = ts.code
	where fr.realtransportcode = tcode
	and fr.dategen between transport_history.DateStart and transport_history.DateEnd
    	and net.get_transport_real_mol(transp.tcode,fr.dategen) = transport_history.finmolcode
	and fr.fueltyperefcode = ftype
	order by ts.DateStart, ts.timestart limit 1)
    as first_count_start,
(select fr.sumgenstart
	from entravelsheet ts inner join entravelsheetfuelremns fr
	on fr.travelsheetrefcode = ts.code
	where fr.realtransportcode = tcode
	and fr.dategen between transport_history.DateStart and transport_history.DateEnd
    	and net.get_transport_real_mol(transp.tcode,fr.dategen) = transport_history.finmolcode
    and fr.fueltyperefcode = ftype
	order by ts.DateStart, ts.timestart limit 1)
    as first_sum_start,

-- последний остаток в этом месяце
(select fr.countgenfinal
	from entravelsheet ts inner join entravelsheetfuelremns fr
	on fr.travelsheetrefcode = ts.code
	where fr.realtransportcode = tcode
	and fr.dategen between transport_history.DateStart and transport_history.DateEnd
    	and net.get_transport_real_mol(transp.tcode,fr.dategen) = transport_history.finmolcode
	and fr.fueltyperefcode = ftype
	order by ts.datefinal DESC, ts.timefinal DESC limit 1)
    as last_count_final,

-- последний остаток из прошлых месяцев
-- (будет использован, если в этом месяце не было ПЛ для этой машины)
(select fr.countgenfinal
	from entravelsheet ts inner join entravelsheetfuelremns fr
	on fr.travelsheetrefcode = ts.code
	where fr.realtransportcode = tcode
    and fr.dategen < transport_history.DateStart
	and fr.fueltyperefcode = ftype
	order by ts.datefinal DESC, ts.timefinal DESC limit 1)
    as prev_count_final,
(select fr.sumgenfinal
	from entravelsheet ts inner join entravelsheetfuelremns fr
	on fr.travelsheetrefcode = ts.code
	where fr.realtransportcode = tcode
	and fr.dategen < transport_history.DateStart
	and fr.fueltyperefcode = ftype
	order by ts.datefinal DESC, ts.timefinal DESC limit 1)
    as prev_sum_final,

-- приходы и расходы
(select sum(fr.countgenin)
	from entravelsheetfuelremns fr
	where fr.realtransportcode = tcode
    and fr.dategen between transport_history.DateStart and transport_history.DateEnd
    and net.get_transport_real_mol(transp.tcode,fr.dategen) = transport_history.finmolcode
    and fr.fueltyperefcode = ftype)
    as count_in,
(select sum(fr.sumgenin)
	from entravelsheetfuelremns as fr
	where fr.realtransportcode = tcode
    and fr.dategen between transport_history.DateStart and transport_history.DateEnd
    and net.get_transport_real_mol(transp.tcode,fr.dategen) = transport_history.finmolcode
    and fr.fueltyperefcode = ftype)
    as sum_in,
(select sum(fr.countgenout)
	from entravelsheetfuelremns fr
	where fr.realtransportcode = tcode
    and fr.dategen between transport_history.DateStart and transport_history.DateEnd
    and net.get_transport_real_mol(transp.tcode,fr.dategen) = transport_history.finmolcode
    and fr.fueltyperefcode = ftype)
    as count_out

from
(select trr.code as tcode, trr.buhname, trr.gosnumber
from tktransportreal trr inner join tktransportmark trrmark
on trr.transportmarkcode = trrmark.code
     where
          (  /*бензин 1 */
          ( trr.fueltypecode not in (75000003) and $P{typefuel} = 1 )
           	or
             /*дизтопливо */
          ( trr.fueltypecode =  75000003  and $P{typefuel} = 2 ) )
	/*SUPP-2581 Если была выдача топлива тип кот. не совпадает с типом топлива на машине, то
		такая машина тоже попадает в отчет*/
	or exists (select code from entravelsheetfuelremns as tvs where tvs.realtransportcode = trr.code
	and tvs.dategen between to_date($P{DateStart}, 'dd.mm.yyyy')
	and last_day(to_date($P{DateEnd}, 'dd.mm.yyyy'))
	and ((tvs.fueltyperefcode not in (75000003) and $P{typefuel} = 1) or
		(tvs.fueltyperefcode in (75000003) and $P{typefuel} = 2)) )
) as transp,
(select tkf.code as ftype, tkf.name as fueltypename from tkfueltype tkf
where
          (  /*бензин 1 */
          		( tkf.code not in (75000003) and $P{typefuel} = 1 )
           	or
             /*дизтопливо */
          		( tkf.code =  75000003  and $P{typefuel} = 2 )
	)
) as fuel,
(select
	/*Код автотранспорта*/
     tktransportrealhistory.transportrealrefcode,
     /*Начало срока владения этого автотранспорта этим МОЛом в этом месяце*/
    min(case
    	when DateStart >= to_date($P{DateStart}, 'dd.mm.yyyy')
        	and (select trh1.finmolcode from tktransportrealhistory as trh1 where trh1.code =  tktransportrealhistory.parentrefcode) != tktransportrealhistory.finmolcode
        then DateStart
     	else to_date($P{DateStart}, 'dd.mm.yyyy')
    end) as DateStart,
    /*Конец срока владения этого автотранспорта этим МОЛом в этом месяце*/
    max(case
    	when coalesce(datefinal, last_day(to_date($P{DateEnd}, 'dd.mm.yyyy'))) <= last_day(to_date($P{DateEnd}, 'dd.mm.yyyy'))
    	then coalesce(datefinal, last_day(to_date($P{DateEnd}, 'dd.mm.yyyy')))
        else last_day(to_date($P{DateEnd}, 'dd.mm.yyyy'))
    end) as DateEnd,
    tktransportrealhistory.finMolCode
     from
     tktransportrealhistory
     where
     tktransportrealhistory.finmolcode = $P{molcode}
     and (
     		(tktransportrealhistory.DateStart >= to_date($P{DateStart}, 'dd.mm.yyyy')
     		and coalesce(tktransportrealhistory.datefinal,tktransportrealhistory.DateStart) <= last_day(to_date($P{DateEnd}, 'dd.mm.yyyy'))
     		)
     	or (to_date($P{DateStart}, 'dd.mm.yyyy') >= tktransportrealhistory.DateStart
        	and to_date($P{DateStart}, 'dd.mm.yyyy') <= coalesce(tktransportrealhistory.datefinal, last_day(to_date($P{DateEnd}, 'dd.mm.yyyy')))
            )
           /*23.05.2012 - не попадали в отчет машины которые передавались с мола на мол в течении отчетного периода (исправлено)*/
        or (
            tktransportrealhistory.datestart between to_date($P{DateStart}, 'dd.mm.yyyy')  and last_day(to_date($P{DateStart}, 'dd.mm.yyyy'))
           )
        or (
           coalesce(tktransportrealhistory.datefinal, tktransportrealhistory.datestart) between to_date($P{DateStart}, 'dd.mm.yyyy')  and last_day(to_date($P{DateStart}, 'dd.mm.yyyy'))
            )
         )
     group by tktransportrealhistory.transportrealrefcode, tktransportrealhistory.finmolcode) as transport_history
     where transport_history.transportrealrefcode = transp.tcode
) AS OTBOR
-- отбираем строки, в которых есть хоть какое-то движение
WHERE
	coalesce(first_count_start, 0) <> 0
	or coalesce(last_count_final, 0) <> 0
	or coalesce(prev_count_final, 0) <> 0
	or coalesce(count_in, 0) <> 0
	or coalesce(count_out, 0) <> 0

) AS tmp_tbl
where codefueltypenet = $P{typeFuelNet}
GROUP BY codefueltypenet, namefueltypenet]]>
	</queryString>
	<field name="countgenfinal_from_trvchet" class="java.math.BigDecimal"/>
	<field name="actstatus" class="java.lang.Integer"/>
	<field name="itogtxt" class="java.lang.String"/>
	<field name="codefueltypenet" class="java.math.BigDecimal"/>
	<field name="namefueltypenet" class="java.lang.String"/>
	<field name="sumgenin" class="java.math.BigDecimal"/>
	<field name="countin" class="java.math.BigDecimal"/>
	<field name="sumgenstart" class="java.math.BigDecimal"/>
	<field name="countgenstart" class="java.math.BigDecimal"/>
	<variable name="sumcountgenstart" class="java.math.BigDecimal" resetType="None" calculation="Sum">
		<variableExpression><![CDATA[$F{countgenstart}.add($F{countin})]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="sumcountin" class="java.math.BigDecimal" resetType="None" calculation="Sum">
		<variableExpression><![CDATA[$F{countin}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<background>
		<band splitType="Stretch"/>
	</background>
	<title>
		<band splitType="Stretch"/>
	</title>
	<pageHeader>
		<band splitType="Stretch"/>
	</pageHeader>
	<columnHeader>
		<band splitType="Stretch"/>
	</columnHeader>
	<detail>
		<band height="15" splitType="Stretch">
			<textField isStretchWithOverflow="true" isBlankWhenNull="true">
				<reportElement key="textField-1" x="0" y="0" width="100" height="15"/>
				<box>
					<topPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textFieldExpression><![CDATA[$F{countgenstart}.toString() + $F{countin}.toString()]]></textFieldExpression>
			</textField>
		</band>
	</detail>
	<columnFooter>
		<band splitType="Stretch"/>
	</columnFooter>
	<pageFooter>
		<band splitType="Stretch"/>
	</pageFooter>
	<summary>
		<band splitType="Stretch"/>
	</summary>
</jasperReport>
