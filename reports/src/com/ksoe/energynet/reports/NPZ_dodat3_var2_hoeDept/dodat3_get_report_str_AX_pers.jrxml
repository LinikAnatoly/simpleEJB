<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="dodat3_get_report_str_AX_pers" pageWidth="2267" pageHeight="535" orientation="Landscape" whenNoDataType="AllSectionsNoDetail" columnWidth="2267" leftMargin="0" rightMargin="0" topMargin="0" bottomMargin="0" scriptletClass="com.ksoe.energynet.reports.common.FINScriptlet" isIgnorePagination="true" >
	<property name="ireport.scriptlethandling" value="2"/>
	<property name="ireport.encoding" value="UTF-8"/>
	<property name="ireport.zoom" value="1.6105100000000008"/>
	<property name="ireport.x" value="669"/>
	<property name="ireport.y" value="0"/>
	<property name="com.jaspersoft.studio.data.sql.SQLQueryDesigner.sash.w1" value="106"/>
	<property name="com.jaspersoft.studio.data.sql.SQLQueryDesigner.sash.w2" value="886"/>
	<import value="net.sf.jasperreports.engine.*"/>
	<import value="java.util.*"/>
	<import value="net.sf.jasperreports.engine.data.*"/>
	<scriptlet name="mDaxScriptlet" class="com.ksoe.energynet.reports.common.mDaxScriptlet"/>
	<scriptlet name="FINScriptlet" class="com.ksoe.energynet.reports.common.FINScriptlet"/>
	<parameter name="Ppodrkod" class="java.lang.String" isForPrompting="false"/>
	<parameter name="Ppodr_name" class="java.lang.String" isForPrompting="false"/>
	<parameter name="pdate1" class="java.lang.String" isForPrompting="false"/>
	<parameter name="pdate2" class="java.lang.String"/>
	<parameter name="sumhoursotpusk" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[$P{sumhoursotpusk} != null ? $P{sumhoursotpusk} : new BigDecimal(0)]]></defaultValueExpression>
	</parameter>
	<parameter name="fio_fin" class="java.lang.String"/>
	<parameter name="post_fin" class="java.lang.String" isForPrompting="false"/>
	<parameter name="tabn_fin" class="java.lang.String" isForPrompting="false"/>
	<parameter name="plankind" class="java.lang.Integer"/>
	<parameter name="p_countworkhours" class="java.math.BigDecimal"/>
	<parameter name="parameter1" class="java.lang.String"/>
	<parameter name="hours_for_work" class="java.math.BigDecimal"/>
	<queryString>
		<![CDATA[/* query all for new */

select period ,
      fio_worker ,
      /*name_position_fin ,*/
      /*name_position_plan ,*/
      /*brigada_work_name ,*/

 sum(kr_plan) as kr_plan ,
 sum(kr_notplan) as kr_notplan ,

 sum(to_plan)  as to_plan ,
 sum(to_notplan)  as to_notplan ,

 sum(work_on_pripis_plan) as work_on_pripis_plan , /*роботи за приписом */
 sum(work_on_pripis_notplan) as work_on_pripis_notplan , /*роботи за приписом */

 sum(vikonan_work_priconection_plan) as vikonan_work_priconection_plan , /*присоединения */
 sum(vikonan_work_priconection_notplan) as vikonan_work_priconection_notplan , /*присоединения */

 sum(avr_plan) as avr_plan ,
 sum(avr_notplan) as avr_notplan ,

 sum(realizac_invest_progr_plan) as realizac_invest_progr_plan , /*инвест программа */
 sum(realizac_invest_progr_notplan) as realizac_invest_progr_notplan , /*инвест программа */

 sum(totalfact_tech_plan) as totalfact_tech_plan ,
 sum(totalfact_tech_notplan) as totalfact_tech_notplan ,

 sum(totalfact_tech_plan)-
 sum(kr_plan)-
 sum(to_plan)-
 sum(work_on_pripis_plan)-
 sum(vikonan_work_priconection_plan)-
 sum(avr_plan)-
 sum(realizac_invest_progr_plan) as  other_work_tech_plan ,

 sum(totalfact_tech_notplan)-
 sum(kr_notplan)-
 sum(to_notplan)-
 sum(work_on_pripis_notplan)-
 sum(vikonan_work_priconection_notplan)-
 sum(avr_notplan)-
 sum(realizac_invest_progr_notplan) as  other_work_tech_notplan ,

 /*------------sbyt */

sum(zamena_ustanovka_plan) as zamena_ustanovka_plan ,
sum(zamena_ustanovka_notplan) as zamena_ustanovka_notplan ,

sum(obstejennya_plan) as obstejennya_plan,
sum(obstejennya_notplan) as obstejennya_notplan,

sum(tehproverka_plan) as tehproverka_plan,
sum(tehproverka_notplan) as tehproverka_notplan,

sum(otluchpodkl_plan) as otluchpodkl_plan,
sum(otluchpodkl_notplan) as otluchpodkl_notplan,

sum(kraja_plan) as kraja_plan,
sum(kraja_notplan) as kraja_notplan,

sum(totalfact_sbyt_plan) as totalfact_sbyt_plan,
sum(totalfact_sbyt_notplan) as totalfact_sbyt_notplan,

sum(totalfact_sbyt_plan)-
sum(zamena_ustanovka_plan)-
sum(obstejennya_plan)-
sum(tehproverka_plan)-
sum(otluchpodkl_plan)-
sum(kraja_plan) as other_work_sbyt_plan,

sum(totalfact_sbyt_notplan)-
sum(zamena_ustanovka_notplan)-
sum(obstejennya_notplan)-
sum(tehproverka_notplan)-
sum(otluchpodkl_notplan)-
sum(kraja_notplan) as other_work_sbyt_notplan


      From (


select (select  case when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '01' then 'Січень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '02' then 'Лютий'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '03' then 'Березень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '04' then 'Квітень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '05' then 'Травень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '06' then 'Червень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '07' then 'Липень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '08' then 'Серпень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '09' then 'Вересень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '10' then 'Жовтень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '11' then 'Листопад'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '12' then 'Грудень'
            end  ) as period ,
 $P{fio_fin} as fio_worker ,
 $P{post_fin} as name_position_fin  ,
baz_sum.name_position_plan ,
baz_sum.brigada_work_name ,
/*--- KR ---  */
 sum(kr_plan) as kr_plan ,
 sum(kr_notplan) as kr_notplan ,

 sum(to_plan)  as to_plan ,
 sum(to_notplan)  as to_notplan ,

 sum(work_on_pripis_plan) as work_on_pripis_plan , /*роботи за приписом */
 sum(work_on_pripis_notplan) as work_on_pripis_notplan , /*роботи за приписом */

 sum(vikonan_work_priconection_plan) as vikonan_work_priconection_plan , /*присоединения */
 sum(vikonan_work_priconection_notplan) as vikonan_work_priconection_notplan , /*присоединения */

 sum(avr_plan) as avr_plan ,
 sum(avr_notplan) as avr_notplan ,

 sum(realizac_invest_progr_plan) as realizac_invest_progr_plan , /*инвест программа */
 sum(realizac_invest_progr_notplan) as realizac_invest_progr_notplan , /*инвест программа */

 sum(totalfact_tech_plan) as totalfact_tech_plan ,
 sum(totalfact_tech_notplan) as totalfact_tech_notplan ,

/*-------sbyt--------*/
0 as zamena_ustanovka_plan,
0 as zamena_ustanovka_notplan,

0 as obstejennya_plan,
0 as obstejennya_notplan,

0 as tehproverka_plan,
0 as tehproverka_notplan,

0 as otluchpodkl_plan,
0 as otluchpodkl_notplan,

0 as kraja_plan ,
0 as kraja_notplan ,

0 as totalfact_sbyt_plan,
0 as totalfact_sbyt_notplan

from (
select
baz_sel.fio_worker , baz_sel.positionname , baz_sel.name_position_plan ,baz_sel.brigada_work_name ,
/*--- KR ---  */
case when baz_sel.staterefcode in( 1 , 8)  /*Кап ремонт или Доробка */
      and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
      and baz_sel.formrefcode = 1
      Then coalesce(baz_sel.countfact,0 ) else 0 end as kr_plan ,
case when baz_sel.staterefcode in( 1 , 8)  /*Кап ремонт или Доробка */
      and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
      and baz_sel.formrefcode = 2
      Then coalesce(baz_sel.countfact,0 ) else 0 end as kr_notplan ,

case when baz_sel.staterefcode = 3 /*Техническое обслуживание */
      and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
      and baz_sel.formrefcode = 1
      Then coalesce(baz_sel.countfact,0 ) else 0 end as to_plan ,

case when baz_sel.staterefcode = 3 /*Техническое обслуживание */
      and baz_sel.enp_typerefcode in (1 , 10  )   /*плановые работы  + внеплановые  */
      and baz_sel.formrefcode = 2
      Then coalesce(baz_sel.countfact,0 ) else 0 end as to_notplan ,

case when baz_sel.enp_typerefcode = 3 and baz_sel.formrefcode = 1 then coalesce(baz_sel.countfact,0) else 0 end as work_on_pripis_plan , /*роботи за приписом */
case when baz_sel.enp_typerefcode = 3 and baz_sel.formrefcode = 2 then coalesce(baz_sel.countfact,0) else 0 end as work_on_pripis_notplan , /*роботи за приписом */

case when baz_sel.enp_typerefcode = 7 and baz_sel.formrefcode = 1 then coalesce(baz_sel.countfact,0) else 0 end as vikonan_work_priconection_plan , /*присоединения */
case when baz_sel.enp_typerefcode = 7 and baz_sel.formrefcode = 2 then coalesce(baz_sel.countfact,0) else 0 end as vikonan_work_priconection_notplan , /*присоединения */

case when baz_sel.enp_typerefcode = 2 and baz_sel.formrefcode = 1 /*аварийно востановительные работы */
      Then coalesce(baz_sel.countfact,0 ) else 0 end as avr_plan ,

case when baz_sel.enp_typerefcode = 2 and baz_sel.formrefcode = 2 /*аварийно востановительные работы */
      Then coalesce(baz_sel.countfact,0 ) else 0 end as avr_notplan ,

case when ( baz_sel.enp_typerefcode = 5 or  (    baz_sel.enp_typerefcode  = 10 /*непл. раб. */
                                            and  baz_sel.staterefcode = 4 /*кап буд*/ )
          ) and baz_sel.formrefcode = 1 then coalesce(baz_sel.countfact,0) else 0 end as realizac_invest_progr_plan , /*инвест программа */

case when ( baz_sel.enp_typerefcode = 5 or  (    baz_sel.enp_typerefcode  = 10 /*непл. раб. */
                                            and  baz_sel.staterefcode = 4 /*кап буд*/ )
          ) and baz_sel.formrefcode = 2 then coalesce(baz_sel.countfact,0) else 0 end as realizac_invest_progr_notplan , /*инвест программа */

case when baz_sel.formrefcode = 1 then coalesce(baz_sel.countfact,0 ) else 0 end as totalfact_tech_plan ,
case when baz_sel.formrefcode = 2 then coalesce(baz_sel.countfact,0 ) else 0 end as totalfact_tech_notplan

From (
SELECT  enplanwork.code ,
        enhumenitem.countfact ,
        enplanwork.typerefcode as enp_typerefcode ,
        enplanwork.staterefcode ,
        enelement.typerefcode as element_typerefcode ,
        finworker.name as fio_worker ,
        finworker.positionname ,
        tkposition.name||coalesce(trim(tkposition.rank),'') as name_position_plan ,
        finexecutor.name  as brigada_work_name ,
        sum( endeliverytime.deliverytimefact ) as deliverytimefact ,
        enhumenitem.code as humanitemcode ,
        enplanwork.formrefcode

           from enhumenitem   left join endeliverytime on (endeliverytime.humenitemrefcode = enhumenitem.code  )
           , enplanworkitem , finworker , enplanwork
           , finexecutor , enelement , tkposition
                   Where  enhumenitem.planitemrefcode = enplanworkitem.code
                     and  enplanworkitem.planrefcode = enplanwork.code
                     and  coalesce(enhumenitem.countfact  , 0 ) <> 0
                     and  enhumenitem.finworkercode = finworker.code
                     and  enplanwork.finexecutorcode =  finexecutor.code
                     and  enplanwork.datestart between to_date($P{pdate1}, 'dd.mm.yyyy') and to_date($P{pdate2},'dd.mm.yyyy')
                     and  enplanwork.statuscode NOT IN (2,6)
                     and  enplanwork.kindcode = $P{plankind}
                     and  enplanwork.elementrefcode = enelement.code
                     and  enplanworkitem.countgen <> 0
                     and  finworker.tabnumber::integer = $P!{tabn_fin}
                     and  enhumenitem.positiongencode = tkposition.code
                     and finworker.kindrefcode in (0,1) /*Заг. + вик. персонал*/
                     and  finworker.departmentcode = $P{Ppodrkod}

group by enplanwork.code ,
        enhumenitem.countfact ,
        enplanwork.typerefcode ,
        enplanwork.staterefcode ,
        enelement.typerefcode ,
        finworker.name ,
        finworker.positionname ,
        tkposition.name||coalesce(trim(tkposition.rank),'') ,
        finexecutor.name   ,
        enhumenitem.code ,
        enplanwork.formrefcode

) baz_sel
) baz_sum
group by baz_sum.fio_worker , baz_sum.positionname , baz_sum.name_position_plan ,
baz_sum.brigada_work_name

------------ suda add sbyt
UNION

select
(select  case when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '01' then 'Січень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '02' then 'Лютий'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '03' then 'Березень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '04' then 'Квітень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '05' then 'Травень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '06' then 'Червень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '07' then 'Липень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '08' then 'Серпень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '09' then 'Вересень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '10' then 'Жовтень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '11' then 'Листопад'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '12' then 'Грудень'
            end  ) as period  ,
 $P{fio_fin} as fio_worker ,
 $P{post_fin} as name_position_fin  ,
 baz_sum.name_position_plan ,
 baz_sum.brigada_work_name ,

 0 as kr_plan , /*--- KR ---  */
 0 as kr_notplan , /*--- KR ---  */

 0 as to_plan ,
 0 as to_notplan ,

 0 as work_on_pripis_plan , /*роботи за приписом */
 0 as work_on_pripis_notplan , /*роботи за приписом */

 0 as vikonan_work_priconection_plan , /*присоединения */
 0 as vikonan_work_priconection_notplan , /*присоединения */

 0 as avr_plan ,
 0 as avr_notplan ,

 0 as realizac_invest_progr_plan , /*инвест программа */
 0 as realizac_invest_progr_notplan , /*инвест программа */

 0 as totalfact_tech_plan ,
 0 as totalfact_tech_notplan ,


sum(zamena_ustanovka_plan) as zamena_ustanovka_plan ,
sum(zamena_ustanovka_notplan) as zamena_ustanovka_notplan ,

sum(obstejennya_plan) as obstejennya_plan,
sum(obstejennya_notplan) as obstejennya_notplan,

sum(tehproverka_plan) as tehproverka_plan,
sum(tehproverka_notplan) as tehproverka_notplan,

sum(otluchpodkl_plan) as otluchpodkl_plan,
sum(otluchpodkl_notplan) as otluchpodkl_notplan,

sum(kraja_plan) as kraja_plan,
sum(kraja_notplan) as kraja_notplan,

sum(countfact_plan) as totalfact_sbyt_plan,
sum(countfact_notplan) as totalfact_sbyt_notplan

From (
Select
baz_sel.fio_worker , baz_sel.positionname , baz_sel.name_position_plan ,
baz_sel.brigada_work_name ,

case when classificationtypecode = 2140008868 and baz_sel.formrefcode = 1 then coalesce(countfact,0) else 0 end as zamena_ustanovka_plan ,
case when classificationtypecode = 2140008868 and baz_sel.formrefcode = 2 then coalesce(countfact,0) else 0 end as zamena_ustanovka_notplan ,

case when  ( classificationtypecode = 2140008867
                             and tktechcardcode <> 2017041451
                             and tktechcardcode <> 2017041454
                             and tktechcardcode <> 2017041456  ) and baz_sel.formrefcode = 1 then coalesce(countfact,0) else 0 end as obstejennya_plan ,
case when  ( classificationtypecode = 2140008867
                             and tktechcardcode <> 2017041451
                             and tktechcardcode <> 2017041454
                             and tktechcardcode <> 2017041456  ) and baz_sel.formrefcode = 2 then coalesce(countfact,0) else 0 end as obstejennya_notplan ,

case when  ( classificationtypecode = 2140008867
                            and (tktechcardcode = 2017041451
                              or tktechcardcode = 2017041454
                              or tktechcardcode = 2017041456)  ) and baz_sel.formrefcode = 1 then coalesce(countfact,0) else 0 end as tehproverka_plan ,
case when  ( classificationtypecode = 2140008867
                            and (tktechcardcode = 2017041451
                              or tktechcardcode = 2017041454
                              or tktechcardcode = 2017041456)  ) and baz_sel.formrefcode = 2 then coalesce(countfact,0) else 0 end as tehproverka_notplan ,

case when classificationtypecode = 2140008869 and baz_sel.formrefcode = 1 then coalesce(countfact,0) else 0 end as otluchpodkl_plan,
case when classificationtypecode = 2140008869 and baz_sel.formrefcode = 2 then coalesce(countfact,0) else 0 end as otluchpodkl_notplan,

case when classificationtypecode = 2140008870 and baz_sel.formrefcode = 1 then coalesce(countfact,0) else 0 end as kraja_plan,
case when classificationtypecode = 2140008870 and baz_sel.formrefcode = 2 then coalesce(countfact,0) else 0 end as kraja_notplan,

case when baz_sel.formrefcode = 1 then coalesce(countfact,0) else 0 end as countfact_plan ,
case when baz_sel.formrefcode = 2 then coalesce(countfact,0) else 0 end as countfact_notplan

 From (
SELECT  enplanwork.code ,
        enhumenitem.countfact ,
        enplanwork.typerefcode as enp_typerefcode ,
        enplanwork.staterefcode ,
        finworker.name as fio_worker ,
        finworker.positionname ,
        tkposition.name||coalesce(trim(tkposition.rank),'') as name_position_plan ,
        finexecutor.name  as brigada_work_name ,
        sum( endeliverytime.deliverytimefact ) as deliverytimefact ,
        enhumenitem.code as humanitemcode  ,
        enplanwork.formrefcode ,
        tktechcard.code as tktechcardcode ,
        tktechcard.classificationtypecode

           from enhumenitem   left join endeliverytime on (endeliverytime.humenitemrefcode = enhumenitem.code  )
           , enplanworkitem , finworker , enplanwork
           , finexecutor ,  tkposition ,  tktechcard
                   Where enplanworkitem.kartarefcode =  tktechcard.code
                     and enhumenitem.planitemrefcode = enplanworkitem.code
                     and  enplanworkitem.planrefcode = enplanwork.code
                     and  coalesce(enhumenitem.countfact  , 0 ) <> 0
                     and  enhumenitem.finworkercode = finworker.code
                     and  enplanwork.finexecutorcode =  finexecutor.code
                     and  enplanwork.datestart between to_date($P{pdate1}, 'dd.mm.yyyy') and to_date($P{pdate2},'dd.mm.yyyy')
                     and  enplanwork.statuscode NOT IN (2,6)
                     and  enplanwork.kindcode = $P{plankind}
                     and  enplanworkitem.countgen <> 0
                     and  finworker.tabnumber::integer = $P!{tabn_fin}
                     and  enhumenitem.positiongencode = tkposition.code
                     and  finworker.departmentcode = $P{Ppodrkod}

					 and finworker.kindrefcode = 2 /*Енергозбутовий  персонал*/

group by enplanwork.code ,
        enhumenitem.countfact ,
        enplanwork.typerefcode ,
        enplanwork.staterefcode ,
        finworker.name ,
        finworker.positionname ,
        tkposition.name||coalesce(trim(tkposition.rank),'') ,
        finexecutor.name   ,
        enhumenitem.code   ,
        enplanwork.formrefcode ,
        tktechcard.code  ,
        tktechcard.classificationtypecode

) baz_sel
) baz_sum
group by baz_sum.fio_worker , baz_sum.positionname , baz_sum.name_position_plan , baz_sum.brigada_work_name



UNION

select
(select  case when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '01' then 'Січень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '02' then 'Лютий'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '03' then 'Березень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '04' then 'Квітень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '05' then 'Травень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '06' then 'Червень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '07' then 'Липень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '08' then 'Серпень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '09' then 'Вересень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '10' then 'Жовтень'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '11' then 'Листопад'
              when to_char(to_date($P{pdate2},'dd.mm.yyyy'),'mm') = '12' then 'Грудень'
            end  ) as period  ,
 $P{fio_fin} as fio_worker ,
 $P{post_fin} as name_position_fin  ,
'' as name_position_plan ,
'' as brigada_work_name ,

 0 as kr_plan , /*--- KR ---  */
 0 as kr_notplan , /*--- KR ---  */

 0 as to_plan ,
 0 as to_notplan ,

 0 as work_on_pripis_plan , /*роботи за приписом */
 0 as work_on_pripis_notplan , /*роботи за приписом */

 0 as vikonan_work_priconection_plan , /*присоединения */
 0 as vikonan_work_priconection_notplan , /*присоединения */

 0 as avr_plan ,
 0 as avr_notplan ,

 0 as realizac_invest_progr_plan , /*инвест программа */
 0 as realizac_invest_progr_notplan , /*инвест программа */

 0 as totalfact_tech_plan ,
 0 as totalfact_tech_notplan ,
/*-------sbyt--------*/
0 as zamena_ustanovka_plan,
0 as zamena_ustanovka_notplan,

0 as obstejennya_plan,
0 as obstejennya_notplan,

0 as tehproverka_plan,
0 as tehproverka_notplan,

0 as otluchpodkl_plan,
0 as otluchpodkl_notplan,

0 as kraja_plan ,
0 as kraja_notplan ,

0 as totalfact_sbyt_plan,
0 as totalfact_sbyt_notplan
  where not exists ( select * from
             enhumenitem , finworker , enplanwork
                   Where  enhumenitem.planrefcode = enplanwork.code
                     and  coalesce(enhumenitem.countfact  , 0 ) <> 0
                     and  enhumenitem.finworkercode = finworker.code
                     and  enplanwork.datestart between to_date($P{pdate1} , 'dd.mm.yyyy') and to_date($P{pdate2},'dd.mm.yyyy')
                     and  enplanwork.statuscode NOT IN (2,6)
                     and  enplanwork.kindcode = $P{plankind}
                     and  finworker.tabnumber::integer = $P!{tabn_fin}
                     and  finworker.departmentcode = $P{Ppodrkod}
               )


 ) sel_zag

group by period , fio_worker /*, name_position_fin , brigada_work_name , name_position_plan*/
order by fio_worker /*, name_position_fin , brigada_work_name , name_position_plan*/]]>
	</queryString>
	<field name="period" class="java.lang.String"/>
	<field name="fio_worker" class="java.lang.String"/>
	<field name="kr_plan" class="java.math.BigDecimal"/>
	<field name="kr_notplan" class="java.math.BigDecimal"/>
	<field name="to_plan" class="java.math.BigDecimal"/>
	<field name="to_notplan" class="java.math.BigDecimal"/>
	<field name="work_on_pripis_plan" class="java.math.BigDecimal"/>
	<field name="work_on_pripis_notplan" class="java.math.BigDecimal"/>
	<field name="vikonan_work_priconection_plan" class="java.math.BigDecimal"/>
	<field name="vikonan_work_priconection_notplan" class="java.math.BigDecimal"/>
	<field name="avr_plan" class="java.math.BigDecimal"/>
	<field name="avr_notplan" class="java.math.BigDecimal"/>
	<field name="realizac_invest_progr_plan" class="java.math.BigDecimal"/>
	<field name="realizac_invest_progr_notplan" class="java.math.BigDecimal"/>
	<field name="totalfact_tech_plan" class="java.math.BigDecimal"/>
	<field name="totalfact_tech_notplan" class="java.math.BigDecimal"/>
	<field name="other_work_tech_plan" class="java.math.BigDecimal"/>
	<field name="other_work_tech_notplan" class="java.math.BigDecimal"/>
	<field name="zamena_ustanovka_plan" class="java.math.BigDecimal"/>
	<field name="zamena_ustanovka_notplan" class="java.math.BigDecimal"/>
	<field name="obstejennya_plan" class="java.math.BigDecimal"/>
	<field name="obstejennya_notplan" class="java.math.BigDecimal"/>
	<field name="tehproverka_plan" class="java.math.BigDecimal"/>
	<field name="tehproverka_notplan" class="java.math.BigDecimal"/>
	<field name="otluchpodkl_plan" class="java.math.BigDecimal"/>
	<field name="otluchpodkl_notplan" class="java.math.BigDecimal"/>
	<field name="kraja_plan" class="java.math.BigDecimal"/>
	<field name="kraja_notplan" class="java.math.BigDecimal"/>
	<field name="totalfact_sbyt_plan" class="java.math.BigDecimal"/>
	<field name="totalfact_sbyt_notplan" class="java.math.BigDecimal"/>
	<field name="other_work_sbyt_plan" class="java.math.BigDecimal"/>
	<field name="other_work_sbyt_notplan" class="java.math.BigDecimal"/>
	<variable name="v_count_personal" class="java.math.BigDecimal">
		<variableExpression><![CDATA[new BigDecimal(1)]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(1)]]></initialValueExpression>
	</variable>
	<variable name="v_countworkhours" class="java.math.BigDecimal">
		<variableExpression><![CDATA[$P{p_countworkhours}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="v_counthoursotpusk" class="java.math.BigDecimal">
		<variableExpression><![CDATA[$P{sumhoursotpusk}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="kr_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{kr_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="kr_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{kr_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="to_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{to_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="to_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{to_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="work_on_pripis_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{work_on_pripis_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="work_on_pripis_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{work_on_pripis_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="vikonan_work_priconection_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{vikonan_work_priconection_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="vikonan_work_priconection_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{vikonan_work_priconection_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="avr_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{avr_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="avr_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{avr_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="realizac_invest_progr_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{realizac_invest_progr_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="realizac_invest_progr_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{realizac_invest_progr_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="totalfact_tech_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{totalfact_tech_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="totalfact_tech_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{totalfact_tech_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="other_work_tech_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{other_work_tech_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="other_work_tech_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{other_work_tech_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="zamena_ustanovka_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{zamena_ustanovka_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="zamena_ustanovka_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{zamena_ustanovka_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="obstejennya_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{obstejennya_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="obstejennya_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{obstejennya_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="tehproverka_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{tehproverka_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="tehproverka_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{tehproverka_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="otluchpodkl_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{otluchpodkl_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="otluchpodkl_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{otluchpodkl_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="kraja_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{kraja_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="kraja_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{kraja_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="totalfact_sbyt_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{totalfact_sbyt_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="totalfact_sbyt_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{totalfact_sbyt_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="other_work_sbyt_plan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{other_work_sbyt_plan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<variable name="other_work_sbyt_notplan" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{other_work_sbyt_notplan}]]></variableExpression>
		<initialValueExpression><![CDATA[new BigDecimal(0)]]></initialValueExpression>
	</variable>
	<group name="rr">
		<groupExpression><![CDATA[$P{fio_fin}]]></groupExpression>
		<groupHeader>
			<band splitType="Stretch"/>
		</groupHeader>
		<groupFooter>
			<band splitType="Stretch"/>
		</groupFooter>
	</group>
	<group name="zatr_hours">
		<groupExpression><![CDATA[$P{fio_fin}+ $P{post_fin}]]></groupExpression>
		<groupHeader>
			<band splitType="Stretch"/>
		</groupHeader>
		<groupFooter>
			<band splitType="Stretch"/>
		</groupFooter>
	</group>
	<group name="gr_podr">
		<groupExpression><![CDATA[$P{Ppodrkod}]]></groupExpression>
		<groupHeader>
			<band splitType="Stretch"/>
		</groupHeader>
		<groupFooter>
			<band splitType="Stretch"/>
		</groupFooter>
	</group>
	<background>
		<band splitType="Stretch"/>
	</background>
	<title>
		<band splitType="Stretch"/>
	</title>
	<pageHeader>
		<band splitType="Stretch"/>
	</pageHeader>
	<columnHeader>
		<band splitType="Stretch"/>
	</columnHeader>
	<detail>
		<band height="20" splitType="Stretch">
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-6" isPrintRepeatedValues="false" mode="Opaque" x="50" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{to_plan}.add($F{to_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-5" isPrintRepeatedValues="false" mode="Opaque" x="0" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{kr_plan}.add($F{kr_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-7" isPrintRepeatedValues="false" mode="Opaque" x="100" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{work_on_pripis_plan}.add($F{work_on_pripis_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-8" isPrintRepeatedValues="false" mode="Opaque" x="150" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{vikonan_work_priconection_plan}
.add($F{vikonan_work_priconection_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="500" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{otluchpodkl_plan}
.add($F{otluchpodkl_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="200" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{avr_plan}
.add($F{avr_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="350" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{zamena_ustanovka_plan}
.add($F{zamena_ustanovka_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="250" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{realizac_invest_progr_plan}
.add($F{realizac_invest_progr_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="550" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{kraja_plan}
.add($F{kraja_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="600" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{other_work_sbyt_plan}
.add($F{other_work_sbyt_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="300" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{other_work_tech_plan}
.add($F{other_work_tech_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="450" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{tehproverka_plan}
.add($F{tehproverka_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="400" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{obstejennya_plan}
.add($F{obstejennya_notplan})]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="650" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[($F{kr_plan}.doubleValue()
    + $F{to_plan}.doubleValue()
    + $F{work_on_pripis_plan}.doubleValue()
    + $F{vikonan_work_priconection_plan}.doubleValue()
    + $F{avr_plan}.doubleValue()
    + $F{realizac_invest_progr_plan}.doubleValue()
    + $F{other_work_tech_plan}.doubleValue()
    + $F{zamena_ustanovka_plan}.doubleValue()
    + $F{obstejennya_plan}.doubleValue()
    + $F{tehproverka_plan}.doubleValue()
    + $F{otluchpodkl_plan}.doubleValue()
    + $F{kraja_plan}.doubleValue()
    + $F{other_work_sbyt_plan}.doubleValue()
) > 0 && ($P{hours_for_work}.doubleValue()  ) > 0   ?
new BigDecimal(
($F{kr_plan}.doubleValue()
    + $F{to_plan}.doubleValue()
    + $F{work_on_pripis_plan}.doubleValue()
    + $F{vikonan_work_priconection_plan}.doubleValue()
    + $F{avr_plan}.doubleValue()
    + $F{realizac_invest_progr_plan}.doubleValue()
    + $F{other_work_tech_plan}.doubleValue()
    + $F{zamena_ustanovka_plan}.doubleValue()
    + $F{obstejennya_plan}.doubleValue()
    + $F{tehproverka_plan}.doubleValue()
    + $F{otluchpodkl_plan}.doubleValue()
    + $F{kraja_plan}.doubleValue()
    + $F{other_work_sbyt_plan}.doubleValue()
) / ($P{hours_for_work}.doubleValue()  )
   * 100 ).setScale(2, java.math.BigDecimal.ROUND_HALF_UP)
: new BigDecimal(0)]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="700" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[($F{kr_notplan}.doubleValue()
    + $F{to_notplan}.doubleValue()
    + $F{work_on_pripis_notplan}.doubleValue()
    + $F{vikonan_work_priconection_notplan}.doubleValue()
    + $F{avr_notplan}.doubleValue()
    + $F{realizac_invest_progr_notplan}.doubleValue()
    + $F{other_work_tech_notplan}.doubleValue()
    + $F{zamena_ustanovka_notplan}.doubleValue()
    + $F{obstejennya_notplan}.doubleValue()
    + $F{tehproverka_notplan}.doubleValue()
    + $F{otluchpodkl_notplan}.doubleValue()
    + $F{kraja_notplan}.doubleValue()
    + $F{other_work_sbyt_notplan}.doubleValue()
) > 0 && ($P{hours_for_work}.doubleValue()  ) > 0 ?
new BigDecimal(
($F{kr_notplan}.doubleValue()
    + $F{to_notplan}.doubleValue()
    + $F{work_on_pripis_notplan}.doubleValue()
    + $F{vikonan_work_priconection_notplan}.doubleValue()
    + $F{avr_notplan}.doubleValue()
    + $F{realizac_invest_progr_notplan}.doubleValue()
    + $F{other_work_tech_notplan}.doubleValue()
    + $F{zamena_ustanovka_notplan}.doubleValue()
    + $F{obstejennya_notplan}.doubleValue()
    + $F{tehproverka_notplan}.doubleValue()
    + $F{otluchpodkl_notplan}.doubleValue()
    + $F{kraja_notplan}.doubleValue()
    + $F{other_work_sbyt_notplan}.doubleValue()
) / ($P{hours_for_work}.doubleValue()  )
* 100 ).setScale(2, java.math.BigDecimal.ROUND_HALF_UP)
: new BigDecimal(0)]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="750" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[new BigDecimal($F{kr_plan}.doubleValue()
    + $F{to_plan}.doubleValue()
    + $F{work_on_pripis_plan}.doubleValue()
    + $F{vikonan_work_priconection_plan}.doubleValue()
    + $F{avr_plan}.doubleValue()
    + $F{realizac_invest_progr_plan}.doubleValue()
    + $F{other_work_tech_plan}.doubleValue()
    + $F{kr_notplan}.doubleValue()
    + $F{to_notplan}.doubleValue()
    + $F{work_on_pripis_notplan}.doubleValue()
    + $F{vikonan_work_priconection_notplan}.doubleValue()
    + $F{avr_notplan}.doubleValue()
    + $F{realizac_invest_progr_notplan}.doubleValue()
    + $F{other_work_tech_notplan}.doubleValue()
  ).add(new BigDecimal(
      $F{zamena_ustanovka_plan}.doubleValue()
    + $F{obstejennya_plan}.doubleValue()
    + $F{tehproverka_plan}.doubleValue()
    + $F{otluchpodkl_plan}.doubleValue()
    + $F{kraja_plan}.doubleValue()
    + $F{other_work_sbyt_plan}.doubleValue()
    + $F{zamena_ustanovka_notplan}.doubleValue()
    + $F{obstejennya_notplan}.doubleValue()
    + $F{tehproverka_notplan}.doubleValue()
    + $F{otluchpodkl_notplan}.doubleValue()
    + $F{kraja_notplan}.doubleValue()
    + $F{other_work_sbyt_notplan}.doubleValue()))]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="800" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[(
      $F{kr_plan}.doubleValue()
    + $F{to_plan}.doubleValue()
    + $F{work_on_pripis_plan}.doubleValue()
    + $F{vikonan_work_priconection_plan}.doubleValue()
    + $F{avr_plan}.doubleValue()
    + $F{realizac_invest_progr_plan}.doubleValue()
    + $F{other_work_tech_plan}.doubleValue()
    + $F{kr_notplan}.doubleValue()
    + $F{to_notplan}.doubleValue()
    + $F{work_on_pripis_notplan}.doubleValue()
    + $F{vikonan_work_priconection_notplan}.doubleValue()
    + $F{avr_notplan}.doubleValue()
    + $F{realizac_invest_progr_notplan}.doubleValue()
    + $F{other_work_tech_notplan}.doubleValue()
	+ $F{zamena_ustanovka_plan}.doubleValue()
    + $F{obstejennya_plan}.doubleValue()
    + $F{tehproverka_plan}.doubleValue()
    + $F{otluchpodkl_plan}.doubleValue()
    + $F{kraja_plan}.doubleValue()
    + $F{other_work_sbyt_plan}.doubleValue()
    + $F{zamena_ustanovka_notplan}.doubleValue()
    + $F{obstejennya_notplan}.doubleValue()
    + $F{tehproverka_notplan}.doubleValue()
    + $F{otluchpodkl_notplan}.doubleValue()
    + $F{kraja_notplan}.doubleValue()
    + $F{other_work_sbyt_notplan}.doubleValue()
) > 0 && ( ($P{hours_for_work}.doubleValue() ) ) > 0 ?
new BigDecimal(
(
      $F{kr_plan}.doubleValue()
    + $F{to_plan}.doubleValue()
    + $F{work_on_pripis_plan}.doubleValue()
    + $F{vikonan_work_priconection_plan}.doubleValue()
    + $F{avr_plan}.doubleValue()
    + $F{realizac_invest_progr_plan}.doubleValue()
    + $F{other_work_tech_plan}.doubleValue()
    + $F{kr_notplan}.doubleValue()
    + $F{to_notplan}.doubleValue()
    + $F{work_on_pripis_notplan}.doubleValue()
    + $F{vikonan_work_priconection_notplan}.doubleValue()
    + $F{avr_notplan}.doubleValue()
    + $F{realizac_invest_progr_notplan}.doubleValue()
    + $F{other_work_tech_notplan}.doubleValue()
	+ $F{zamena_ustanovka_plan}.doubleValue()
    + $F{obstejennya_plan}.doubleValue()
    + $F{tehproverka_plan}.doubleValue()
    + $F{otluchpodkl_plan}.doubleValue()
    + $F{kraja_plan}.doubleValue()
    + $F{other_work_sbyt_plan}.doubleValue()
    + $F{zamena_ustanovka_notplan}.doubleValue()
    + $F{obstejennya_notplan}.doubleValue()
    + $F{tehproverka_notplan}.doubleValue()
    + $F{otluchpodkl_notplan}.doubleValue()
    + $F{kraja_notplan}.doubleValue()
    + $F{other_work_sbyt_notplan}.doubleValue()
)/ ($P{hours_for_work}.doubleValue() )
*100
).setScale(2, java.math.BigDecimal.ROUND_HALF_UP)
: new BigDecimal(0)]]></textFieldExpression>
			</textField>
			<textField isStretchWithOverflow="true" evaluationTime="Group" evaluationGroup="gr_podr" pattern="###0.00" isBlankWhenNull="true">
				<reportElement key="textField-9" isPrintRepeatedValues="false" mode="Opaque" x="850" y="0" width="50" height="20" printWhenGroupChanges="gr_podr" forecolor="#000000" backcolor="#FFFFFF" />
				<box topPadding="1">
					<topPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<leftPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
					<rightPen lineWidth="0.5" lineStyle="Solid" lineColor="#000000"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Bottom" rotation="None">
					<font fontName="Times New Roman" size="8" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" pdfFontName="times.ttf" pdfEncoding="Cp1251" isPdfEmbedded="true"/>
					<paragraph lineSpacing="Single"/>
				</textElement>
				<textFieldExpression><![CDATA[(
      $F{kr_plan}.doubleValue()
    + $F{to_plan}.doubleValue()
    + $F{work_on_pripis_plan}.doubleValue()
    + $F{vikonan_work_priconection_plan}.doubleValue()
    + $F{avr_plan}.doubleValue()
    + $F{realizac_invest_progr_plan}.doubleValue()
    + $F{other_work_tech_plan}.doubleValue()
    + $F{kr_notplan}.doubleValue()
    + $F{to_notplan}.doubleValue()
    + $F{work_on_pripis_notplan}.doubleValue()
    + $F{vikonan_work_priconection_notplan}.doubleValue()
    + $F{avr_notplan}.doubleValue()
    + $F{realizac_invest_progr_notplan}.doubleValue()
    + $F{other_work_tech_notplan}.doubleValue()
	+ $F{zamena_ustanovka_plan}.doubleValue()
    + $F{obstejennya_plan}.doubleValue()
    + $F{tehproverka_plan}.doubleValue()
    + $F{otluchpodkl_plan}.doubleValue()
    + $F{kraja_plan}.doubleValue()
    + $F{other_work_sbyt_plan}.doubleValue()
    + $F{zamena_ustanovka_notplan}.doubleValue()
    + $F{obstejennya_notplan}.doubleValue()
    + $F{tehproverka_notplan}.doubleValue()
    + $F{otluchpodkl_notplan}.doubleValue()
    + $F{kraja_notplan}.doubleValue()
    + $F{other_work_sbyt_notplan}.doubleValue()
) > 0 ?
(
(
      $F{kr_plan}.doubleValue()
    + $F{to_plan}.doubleValue()
    + $F{work_on_pripis_plan}.doubleValue()
    + $F{vikonan_work_priconection_plan}.doubleValue()
    + $F{avr_plan}.doubleValue()
    + $F{realizac_invest_progr_plan}.doubleValue()
    + $F{other_work_tech_plan}.doubleValue()
    + $F{kr_notplan}.doubleValue()
    + $F{to_notplan}.doubleValue()
    + $F{work_on_pripis_notplan}.doubleValue()
    + $F{vikonan_work_priconection_notplan}.doubleValue()
    + $F{avr_notplan}.doubleValue()
    + $F{realizac_invest_progr_notplan}.doubleValue()
    + $F{other_work_tech_notplan}.doubleValue()
	+ $F{zamena_ustanovka_plan}.doubleValue()
    + $F{obstejennya_plan}.doubleValue()
    + $F{tehproverka_plan}.doubleValue()
    + $F{otluchpodkl_plan}.doubleValue()
    + $F{kraja_plan}.doubleValue()
    + $F{other_work_sbyt_plan}.doubleValue()
    + $F{zamena_ustanovka_notplan}.doubleValue()
    + $F{obstejennya_notplan}.doubleValue()
    + $F{tehproverka_notplan}.doubleValue()
    + $F{otluchpodkl_notplan}.doubleValue()
    + $F{kraja_notplan}.doubleValue()
    + $F{other_work_sbyt_notplan}.doubleValue()
)/ ($P{hours_for_work}.doubleValue() )
*100
) >= 80 ? new BigDecimal(1) : new BigDecimal(0)
: new BigDecimal(0)]]></textFieldExpression>
			</textField>
		</band>
	</detail>
	<columnFooter>
		<band splitType="Stretch"/>
	</columnFooter>
	<pageFooter>
		<band splitType="Stretch"/>
	</pageFooter>
	<summary>
		<band splitType="Stretch"/>
	</summary>
</jasperReport>
